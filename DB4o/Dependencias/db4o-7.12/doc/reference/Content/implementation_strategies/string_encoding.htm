<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="2" MadCap:lastHeight="120" MadCap:lastWidth="624" MadCap:disableMasterStylesheet="true" MadCap:tocPath="Implementation Strategies" MadCap:InPreviewMode="false" MadCap:RuntimeFileType="Topic" MadCap:TargetType="WebHelp" MadCap:PathToHelpSystem="../../" MadCap:HelpSystemFileName="index.xml" MadCap:SearchType="Stem">
    <head><title>String Encoding	</title>
        <script type="text/javascript">/* <![CDATA[ */
			window.onload = function(){
                             prettyPrint();
			};
                /* ]]> */</script>
        <link href="../SkinSupport/MadCap.css" rel="stylesheet" />
        <link href="../Resources/Stylesheets/OnlineStyle.css" rel="stylesheet" />
        <script src="../Resources/Code/prettify.js">
        </script>
        <script src="../Resources/Code/lang-vb.js">
        </script>
        <script src="../SkinSupport/MadCapAll.js" type="text/javascript">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink" style="display: none;"><a href="../../index_CSH.html#implementation_strategies/string_encoding.htm" style="">Open topic with navigation</a>
        </p>
        <div class="MCBreadcrumbsBox"><span class="MCBreadcrumbsPrefix">You are here: </span><a class="MCBreadcrumbsLink" href="../implementation_strategies.htm">Implementation Strategies</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">String Encoding	</span>
        </div>
        <p>
            <script type="text/javascript">/*<![CDATA[*/document.write('<a href="' + location.href +'">');
				document.write("Direct Link");
			document.write('</a>');/*]]>*/</script>
        </p>
        <p>
        </p>
        <h1>String Encoding</h1>
        <p>When db4o
stores and loads strings it has to convert them to and from byte arrays. By
default db4o provides 3 types of string encoding, which do this job: Unicode, UTF-8
and ISO 8859-1, Unicode being the default one. In general Unicode can represent
any character set. However, it also imposes a certain overhead, as character values
are stored in 4 bytes (less generic encoding usually use 2 or even 1 byte per
character). In order to save on the database file size, it is recommended to
use ISO 8859-1, which only required 2 bytes per character. However ISO 8859-1
only supports latin alphabet.</p>
        <p>&#160;</p>
        <p>It's possible to configure your own string encoding implementation.</p>
        <p>CommonConfiguration#stringEncoding(stringEncoding)</p>
        <p>Where
stringEncoding can be either one of the default ones:</p>
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <p>Java:</p>
            <p>
                <pre class="prettyprint" xml:space="preserve">
EmbeddedConfiguration config = Db4oEmbedded.newConfiguration();
config.common().stringEncoding(StringEncodings.utf8());
Db4oEmbedded.openFile(config, "myDB.db4o");
				</pre>
            </p>
        </p>
        <p>or a newly implemented one:</p>
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <p>Java:  </p>
            <p>
                <pre class="prettyprint" xml:space="preserve">
EmbeddedConfiguration config = Db4oEmbedded.newConfiguration();
config.common().stringEncoding(new StringEncoding() {
    public byte[] encode(String s) {
       //TODO implement the encoding
       return null;
    }

    public String decode(byte[] bytes, int i, int i1) {
       //TODO implement the decoding
       return null;
    }
});
Db4oEmbedded.openFile(config,"myDB.db4o");
			</pre>
            </p>
        </p>
        <p MadCap:conditions="Global.Primary:java" />
        <p>It is important to remember that the string
encoding is selected once for the lifetime of a database and cannot be changed
afterwards. With the default encoding it is enough to supply the encoding
configuration when the database is created, it will be picked up automatically
afterwards. With the custom string encoding's, you must make sure that the same
encoding is submitted with every database open call. As db4o uses string
encoding to store metadata information like field and classnames, opening a
database with a wrong string encoding will fail with exceptions.</p>
        <script type="text/javascript" src="../SkinSupport/MadCapBodyEnd.js">
        </script>
    </body>
</html>