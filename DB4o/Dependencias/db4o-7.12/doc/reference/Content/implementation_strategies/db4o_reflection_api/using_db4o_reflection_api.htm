<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="2" MadCap:lastHeight="120" MadCap:lastWidth="624" MadCap:disableMasterStylesheet="true" MadCap:tocPath="Implementation Strategies|db4o Reflection API" MadCap:InPreviewMode="false" MadCap:RuntimeFileType="Topic" MadCap:TargetType="WebHelp" MadCap:PathToHelpSystem="../../../" MadCap:HelpSystemFileName="index.xml" MadCap:SearchType="Stem">
    <head><title>Using db4o reflection API	</title>
        <script type="text/javascript">/* <![CDATA[ */
			window.onload = function(){
                             prettyPrint();
			};
                /* ]]> */</script>
        <link href="../../SkinSupport/MadCap.css" rel="stylesheet" />
        <link href="../../Resources/Stylesheets/OnlineStyle.css" rel="stylesheet" />
        <script src="../../Resources/Code/prettify.js">
        </script>
        <script src="../../Resources/Code/lang-vb.js">
        </script>
        <script src="../../SkinSupport/MadCapAll.js" type="text/javascript">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink" style="display: none;"><a href="../../../index_CSH.html#implementation_strategies/db4o_reflection_api/using_db4o_reflection_api.htm" style="">Open topic with navigation</a>
        </p>
        <div class="MCBreadcrumbsBox"><span class="MCBreadcrumbsPrefix">You are here: </span><a class="MCBreadcrumbsLink" href="../../implementation_strategies.htm">Implementation Strategies</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="../db4o_reflection_api.htm">db4o Reflection API</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">Using db4o reflection API</span>
        </div>
        <p>
            <script type="text/javascript">/*<![CDATA[*/document.write('<a href="' + location.href +'">');
				document.write("Direct Link");
			document.write('</a>');/*]]>*/</script>
        </p>
        <p>
        </p>
        <h1>Using db4o reflection API</h1>
        <p>Db4o reflector can be used in your application just like normal language reflector. Let's create a new database with a couple of cars in it:</p>
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <pre class="prettyprint" xml:space="preserve">ReflectorExample.java: setCars
private static void setCars()
   {
     new File(DB4O_FILE_NAME).delete();
     ObjectContainer container=Db4o.openFile(DB4O_FILE_NAME);
    try  {
      Car car1 = new Car("BMW");
      container.store(car1);
      Car car2 = new Car("Ferrari");
      container.store(car2);
      
      System.out.println("Saved:");
      Query query = container.query();
      query.constrain(Car.class);
      ObjectSet results = query.execute();
      listResult(results);
    } finally  {
      container.close();
    }
  }</pre>
        </p>
        <p MadCap:conditions="Global.Primary:java" />
        <p MadCap:conditions="Global.Primary:cs" />
        <p MadCap:conditions="Global.Primary:vb" />
        <p>We can check, what information is available for db4o reflector:</p>
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <pre class="prettyprint" xml:space="preserve">ReflectorExample.java: getReflectorInfo
private static void getReflectorInfo()
   {
    ObjectContainer container=Db4o.openFile(DB4O_FILE_NAME);
    try  {
      System.out.println("Reflector in use: " + container.ext().reflector());
      System.out.println("Reflector delegate" +container.ext().reflector().getDelegate());
      ReflectClass[] knownClasses = container.ext().reflector().knownClasses();
      int count = knownClasses.length;
      System.out.println("Known classes: " + count);
      for (int i=0; i &lt;knownClasses.length; i++) {
        System.out.println(knownClasses[i]);
      }
    } finally  {
      container.close();
    }
  }</pre>
        </p>
        <p MadCap:conditions="Global.Primary:java" />
        <p MadCap:conditions="Global.Primary:cs" />
        <p MadCap:conditions="Global.Primary:vb" />
        <p>All the information about Car class can also be retrieved through reflector:</p>
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <pre class="prettyprint" xml:space="preserve">
                <a name="kanchor78"></a>ReflectorExample.java: getCarInfo
private static void getCarInfo()
   {
    ObjectContainer container=Db4o.openFile(DB4O_FILE_NAME);
    try  {
      GenericReflector reflector = new GenericReflector(null,container.ext().reflector());
      ReflectClass carClass = reflector.forName(Car.class.getName());
      System.out.println("Reflected class "+carClass);
       // public fields
      System.out.println("FIELDS:");
      ReflectField[] fields = carClass.getDeclaredFields();
      for (int i = 0; i &lt; fields.length; i++)
        System.out.println(fields[i].getName());
      
      // public methods
      System.out.println("METHODS:");
      ReflectMethod method = carClass.getMethod("getPilot",null);
      System.out.println(method.getClass());

    } finally  {
      container.close();
    }
  }</pre>
        </p>
        <p MadCap:conditions="Global.Primary:java" />
        <p MadCap:conditions="Global.Primary:cs" />
        <p MadCap:conditions="Global.Primary:vb" />
        <p>We can use classes retrieved using reflection to create queries:</p>
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <pre class="prettyprint" xml:space="preserve">ReflectorExample.java: getCars
private static void getCars()
   {
    ObjectContainer container=Db4o.openFile(DB4O_FILE_NAME);
    try  {
      GenericReflector reflector = new GenericReflector(null,container.ext().reflector());
      ReflectClass carClass = reflector.forName(Car.class.getName());
      System.out.println("Reflected class "+carClass);
      System.out.println("Retrieved with reflector:");
      Query query = container.query();
      query.constrain(carClass);
      ObjectSet results = query.execute();
      listResult(results);
    } finally  {
      container.close();
    }
  }</pre>
        </p>
        <p MadCap:conditions="Global.Primary:java" />
        <p MadCap:conditions="Global.Primary:cs" />
        <p MadCap:conditions="Global.Primary:vb" />
        <p MadCap:conditions="Primary.Online">Download example code:</p>
        <p MadCap:conditions="Primary.Online">
            <MadCap:conditionalText MadCap:conditions="Primary.Java"><a href="reflectionsjava.zip">Java </a>
            </MadCap:conditionalText>
        </p>
        <script type="text/javascript" src="../../SkinSupport/MadCapBodyEnd.js">
        </script>
    </body>
</html>