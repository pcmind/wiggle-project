<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="2" MadCap:lastHeight="120" MadCap:lastWidth="624" MadCap:disableMasterStylesheet="true" MadCap:tocPath="Implementation Strategies|Native Query Collection" MadCap:InPreviewMode="false" MadCap:RuntimeFileType="Topic" MadCap:TargetType="WebHelp" MadCap:PathToHelpSystem="../../../" MadCap:HelpSystemFileName="index.xml" MadCap:SearchType="Stem">
    <head><title>Selecting Ranges	</title>
        <script type="text/javascript">/* <![CDATA[ */
			window.onload = function(){
                             prettyPrint();
			};
                /* ]]> */</script>
        <link href="../../SkinSupport/MadCap.css" rel="stylesheet" />
        <link href="../../Resources/Stylesheets/OnlineStyle.css" rel="stylesheet" />
        <script src="../../Resources/Code/prettify.js">
        </script>
        <script src="../../Resources/Code/lang-vb.js">
        </script>
        <script src="../../SkinSupport/MadCapAll.js" type="text/javascript">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink" style="display: none;"><a href="../../../index_CSH.html#implementation_strategies/native_query_collection/selecting_ranges.htm" style="">Open topic with navigation</a>
        </p>
        <div class="MCBreadcrumbsBox"><span class="MCBreadcrumbsPrefix">You are here: </span><a class="MCBreadcrumbsLink" href="../../implementation_strategies.htm">Implementation Strategies</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="../native_query_collection.htm">Native Query Collection</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">Selecting Ranges</span>
        </div>
        <p>
            <script type="text/javascript">/*<![CDATA[*/document.write('<a href="' + location.href +'">');
				document.write("Direct Link");
			document.write('</a>');/*]]>*/</script>
        </p>
        <p>
        </p>
        <h1>Selecting Ranges</h1>
        <p>This group of examples shows how to select ranges of objects. <a href="store_pilots.htm">Store Pilots</a> function is used to fill in the database.</p><a name="SelectTestPilots6PointsMore"></a>
        <h2>SelectTestPilots6PointsMore</h2>
        <p>Select "Test" pilots with the points range of more than 6. </p>
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <pre class="prettyprint" xml:space="preserve">SimpleExamples.java: selectTestPilots6PointsMore
private static void selectTestPilots6PointsMore()  {
    ObjectContainer container = database();
    if (container != null)  {
      try  {
        List&lt;Pilot&gt; result = container.query(new Predicate&lt;Pilot&gt;()  {
          public boolean match(Pilot pilot)  {
            // all Pilots containing "Test" in the name
            // and 6 point are included in the result
            boolean b1 = pilot.getName().indexOf("Test") &gt;= 0;
            boolean b2 = pilot.getPoints() &gt; 6;
            return b1 &amp;&amp; b2;
          }
        });
        listResult(result);
      } catch (Exception ex)  {
        System.out.println("System Exception: " + ex.getMessage());
      } finally  {
        closeDatabase();
      }
    }
  }</pre>
        </p>
        <p MadCap:conditions="Global.Primary:java" />
        <p MadCap:conditions="Global.Primary:cs" />
        <p MadCap:conditions="Global.Primary:vb" /><a name="SelectPilots6To12Points"></a>
        <h2>SelectPilots6To12Points</h2>
        <p>Select all pilots, who have points in [6,12] range. </p>
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <pre class="prettyprint" xml:space="preserve">SimpleExamples.java: selectPilots6To12Points
private static void selectPilots6To12Points()  {
    ObjectContainer container = database();
    if (container != null)  {
      try  {
        List&lt;Pilot&gt; result = container.query(new Predicate&lt;Pilot&gt;()  {
          public boolean match(Pilot pilot)  {
            // all Pilots having 6 to 12 point are
            // included in the result
            return ((pilot.getPoints() &gt;= 6) &amp;&amp; (pilot.getPoints() &lt;= 12));
          }
        });
        listResult(result);
      } catch (Exception ex)  {
        System.out.println("System Exception: " + ex.getMessage());
      } finally  {
        closeDatabase();
      }
    }
  }</pre>
        </p>
        <p MadCap:conditions="Global.Primary:java" />
        <p MadCap:conditions="Global.Primary:cs" />
        <p MadCap:conditions="Global.Primary:vb" /><a name="SelectPilotsRandom"></a>
        <h2>SelectPilotsRandom</h2>
        <p>Select pilots randomly: random array of point values is generated, those pilots who have points values within this array are included in the result set. </p>
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <pre class="prettyprint" xml:space="preserve">SimpleExamples.java: selectPilotsRandom
private static void selectPilotsRandom()  {
    ObjectContainer container = database();
    if (container != null)  {
      try  {
        List&lt;Pilot&gt; result = container.query(new Predicate&lt;Pilot&gt;()  {
          private ArrayList randomArray = null;

          private List getRandomArray()  {
            if (randomArray == null)  {
              randomArray = new ArrayList();
              for (int i = 0; i &lt; 10; i++)  {
                randomArray.add((int) (Math.random() * 10));
                System.out.println(randomArray.queryByExample(i));
              }
            }
            return randomArray;
          }

          public boolean match(Pilot pilot)  {
            // all Pilots having points in the values of
            // the randomArray
            return getRandomArray().contains(pilot.getPoints());
          }
        });
        listResult(result);
      } catch (Exception ex)  {
        System.out.println("System Exception: " + ex.getMessage());
      } finally  {
        closeDatabase();
      }
    }
  }</pre>
        </p>
        <p MadCap:conditions="Global.Primary:java" />
        <p MadCap:conditions="Global.Primary:cs" />
        <p MadCap:conditions="Global.Primary:vb" /><a name="SelectPilotsEven"></a>
        <h2>SelectPilotsEven</h2>
        <p>Select pilots with even points. </p>
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <pre class="prettyprint" xml:space="preserve">SimpleExamples.java: selectPilotsEven
private static void selectPilotsEven()  {
    ObjectContainer container = database();
    if (container != null)  {
      try  {
        List&lt;Pilot&gt; result = container.query(new Predicate&lt;Pilot&gt;()  {
          public boolean match(Pilot pilot)  {
            // all Pilots having even points
            return pilot.getPoints() % 2 == 0;
          }
        });
        listResult(result);
      } catch (Exception ex)  {
        System.out.println("System Exception: " + ex.getMessage());
      } finally  {
        closeDatabase();
      }
    }
  }</pre>
        </p>
        <p MadCap:conditions="Global.Primary:java" />
        <p MadCap:conditions="Global.Primary:cs" />
        <p MadCap:conditions="Global.Primary:vb" /><a name="SelectAnyOnePilot"></a>
        <h2>SelectAnyOnePilot</h2>
        <p>Select one pilot and quit. </p>
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <pre class="prettyprint" xml:space="preserve">SimpleExamples.java: selectAnyOnePilot
private static void selectAnyOnePilot()  {
    ObjectContainer container = database();
    if (container != null)  {
      try  {
        List&lt;Pilot&gt; result = container.query(new Predicate&lt;Pilot&gt;()  {
          boolean selected = false;

          public boolean match(Pilot pilot)  {
            // return only first result (first result can
            // be any value from the resultset)
            if (!selected)  {
              selected = true;
              return selected;
            } else  {
              return !selected;
            }
          }
        });
        listResult(result);
      } catch (Exception ex)  {
        System.out.println("System Exception: " + ex.getMessage());
      } finally  {
        closeDatabase();
      }
    }
  }</pre>
        </p>
        <p MadCap:conditions="Global.Primary:java" />
        <p MadCap:conditions="Global.Primary:cs" />
        <p MadCap:conditions="Global.Primary:vb" /><a name="SelectDistinctPilots"></a>
        <h2>SelectDistinctPilots</h2>This example shows how to select only unique results from
the non-unique contents in the database.

<p MadCap:conditions="Primary.Java,Primary.All languages"><pre class="prettyprint" xml:space="preserve">SimpleExamples.java: storeDuplicates
private static void storeDuplicates()  {
    new File(DB4O_FILE_NAME).delete();
    ObjectContainer container = database();
    if (container != null)  {
      try  {
        Pilot pilot;
        for (int i = 0; i &lt; OBJECT_COUNT; i++)  {
          pilot = new Pilot("Test Pilot #" + i, i);
          container.store(pilot);
        }
        for (int i = 0; i &lt; OBJECT_COUNT; i++)  {
          pilot = new Pilot("Test Pilot #" + i, i);
          container.store(pilot);
        }
        container.commit();
      } catch (Db4oException ex)  {
        System.out.println("Db4o Exception: " + ex.getMessage());
      } catch (Exception ex)  {
        System.out.println("System Exception: " + ex.getMessage());
      } finally  {
        closeDatabase();
      }
    }
  }</pre><pre class="prettyprint" xml:space="preserve">SimpleExamples.java: selectDistinctPilots
private static void selectDistinctPilots()  {
    ObjectContainer container = database();
    if (container != null)  {
      try  {
        DistinctPilotsPredicate predicate = new DistinctPilotsPredicate();
        List&lt;Pilot&gt; result = container.query(predicate);
        listResult(predicate.uniqueResult);
      } catch (Exception ex)  {
        System.out.println("System Exception: " + ex.getMessage());
      } finally  {
        closeDatabase();
      }
    }
  }</pre><pre class="prettyprint" xml:space="preserve">SimpleExamples.java: DistinctPilotsPredicate
1</pre></p><p MadCap:conditions="Global.Primary:java" /><p MadCap:conditions="Global.Primary:cs" /><p MadCap:conditions="Global.Primary:vb" /><p MadCap:conditions="Primary.Online">Download example code:</p><p MadCap:conditions="Primary.Online"><MadCap:conditionalText MadCap:conditions="Primary.Java"><a href="nqcollectionjava.zip">Java </a></MadCap:conditionalText></p><script type="text/javascript" src="../../SkinSupport/MadCapBodyEnd.js"></script></body>
</html>