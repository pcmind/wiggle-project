<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="2" MadCap:lastHeight="120" MadCap:lastWidth="624" MadCap:disableMasterStylesheet="true" MadCap:tocPath="Implementation Strategies|Type Handling|Static Fields And Enums" MadCap:InPreviewMode="false" MadCap:RuntimeFileType="Topic" MadCap:TargetType="WebHelp" MadCap:PathToHelpSystem="../../../../" MadCap:HelpSystemFileName="index.xml" MadCap:SearchType="Stem">
    <head><title>Java enumerations	</title>
        <script type="text/javascript">/* <![CDATA[ */
			window.onload = function(){
                             prettyPrint();
			};
                /* ]]> */</script>
        <link href="../../../SkinSupport/MadCap.css" rel="stylesheet" />
        <link href="../../../Resources/Stylesheets/OnlineStyle.css" rel="stylesheet" />
        <script src="../../../Resources/Code/prettify.js">
        </script>
        <script src="../../../Resources/Code/lang-vb.js">
        </script>
        <script src="../../../SkinSupport/MadCapAll.js" type="text/javascript">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink" style="display: none;"><a href="../../../../index_CSH.html#implementation_strategies/type_handling/static_fields_and_enums/java_enumerations.htm" style="">Open topic with navigation</a>
        </p>
        <div class="MCBreadcrumbsBox"><span class="MCBreadcrumbsPrefix">You are here: </span><a class="MCBreadcrumbsLink" href="../../../implementation_strategies.htm">Implementation Strategies</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="../../type_handling.htm">Type Handling</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="../static_fields_and_enums.htm">Static Fields And Enums</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">Java Enumerations</span>
        </div>
        <p>
            <script type="text/javascript">/*<![CDATA[*/document.write('<a href="' + location.href +'">');
				document.write("Direct Link");
			document.write('</a>');/*]]>*/</script>
        </p>
        <p>
        </p>
        <h1><a name="kanchor50"></a>Java enumerations</h1>
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <p>Enumerated types were brought into Java with the JDK 1.5 release. In fact they represent a class with static fields similar to the one reviewed in the <a href="static_fields_api.htm">Static fields paragraph</a>.</p>
            <pre class="prettyprint" xml:space="preserve">Qualification.java
/**//* Copyright (C) 2004 - 2007 Versant Inc. http://www.db4o.com */

package com.db4odoc.enums;

public enum Qualification  {
  
      WINNER("WINNER"),
      PROFESSIONAL("PROFESSIONAL"),
      TRAINEE("TRAINEE");
      
      private String qualification;
      
      private Qualification(String qualification)  {
         this.qualification = qualification;
      }

      public void testChange(String qualification) {
        this.qualification = qualification; 
      }
      
      public String toString()  {
          return qualification;
      }
}</pre>
            <p>db4o takes care about storing enumeration objects automatically without any additional settings:</p>
            <pre class="prettyprint" xml:space="preserve">EnumExample.java: setPilots
private static void setPilots() {
    new File(DB4O_FILE_NAME).delete();
    ObjectContainer container=Db4o.openFile(DB4O_FILE_NAME);
    try  {
      container.store(new Pilot("Michael Schumacher",Qualification.WINNER));
      container.store(new Pilot("Rubens Barrichello",Qualification.PROFESSIONAL));
    } finally  {
      container.close();
    }
  }</pre>
            <pre class="prettyprint" xml:space="preserve">EnumExample.java: checkPilots
private static void checkPilots() {
    ObjectContainer container=Db4o.openFile(DB4O_FILE_NAME);
    try  {
          ObjectSet result = container.query(Pilot.class);
          System.out.println("Saved pilots: " + result.size());
          for(int x = 0; x &lt; result.size(); x++) {
            Pilot pilot = (Pilot )result.queryByExample(x);
            if (pilot.getQualification() == Qualification.WINNER) {
              System.out.println("Winner pilot: " + pilot);
            } else if (pilot.getQualification() == Qualification.PROFESSIONAL) {
              System.out.println("Professional pilot: " + pilot);
            }  else  {
              System.out.println("Uncategorized pilot: " + pilot);
            }
          }
    } finally  {
      container.close();
    }
    }</pre>
            <p>Another specific feature of enums in db4o: deletion is not possible:</p>
            <pre class="prettyprint" xml:space="preserve">EnumExample.java: deletePilots
private static void deletePilots() {
    System.out.println("Qualification enum before delete Pilots");
    printQualification();
    Configuration configuration = Db4o.newConfiguration();
    configuration .objectClass(Pilot.class)
.objectField("qualification").cascadeOnDelete(true);
    ObjectContainer container=Db4o.openFile(configuration, DB4O_FILE_NAME);

    try  {
          ObjectSet result = container.query(Pilot.class);
          for(int x = 0; x &lt; result.size(); x++) {
            Pilot pilot = (Pilot )result.queryByExample(x);
            container.delete(pilot);
          }
    } finally  {
      container.close();
    }
    System.out.println("Qualification enum after delete Pilots");
    printQualification();
    }</pre>
            <pre class="prettyprint" xml:space="preserve">EnumExample.java: checkPilots
private static void checkPilots() {
    ObjectContainer container=Db4o.openFile(DB4O_FILE_NAME);
    try  {
          ObjectSet result = container.query(Pilot.class);
          System.out.println("Saved pilots: " + result.size());
          for(int x = 0; x &lt; result.size(); x++) {
            Pilot pilot = (Pilot )result.queryByExample(x);
            if (pilot.getQualification() == Qualification.WINNER) {
              System.out.println("Winner pilot: " + pilot);
            } else if (pilot.getQualification() == Qualification.PROFESSIONAL) {
              System.out.println("Professional pilot: " + pilot);
            }  else  {
              System.out.println("Uncategorized pilot: " + pilot);
            }
          }
    } finally  {
      container.close();
    }
    }</pre>
            <p>Deletion of references does not automatically delete the enum. Even explicit deletion does not work:</p>
            <pre class="prettyprint" xml:space="preserve">EnumExample.java: deleteQualification
private static void deleteQualification() {
    System.out.println("Explicit delete of Qualification enum");
    Configuration configuration = Db4o.newConfiguration();
    configuration.objectClass(Qualification.class).cascadeOnDelete(true);
    ObjectContainer container=Db4o.openFile(configuration, DB4O_FILE_NAME);
    try  {
      ObjectSet  result = container.query(Qualification.class);
          for(int x = 0; x &lt; result.size(); x++) {
            Qualification pq = (Qualification)result.queryByExample(x);
            container.delete(pq);
          }
    } finally  {
      container.close();
    }
    printQualification();
    }</pre>
            <p>Enum update works in the same way as for normal static objects - updated enum should be explicitly saved to database (#set(enum)).</p>
            <pre class="prettyprint" xml:space="preserve">EnumExample.java: updateQualification
private static void updateQualification() {
    System.out.println("Updating WINNER qualification constant");
    ObjectContainer container=Db4o.openFile(DB4O_FILE_NAME);
    try  {
      Query query = container.query();
      query.constrain(Qualification.class);
      query.descend("qualification").constrain("WINNER");
          ObjectSet result = query.execute();
          for(int x = 0; x &lt; result.size(); x++) {
            Qualification qualification = (Qualification)result.queryByExample(x);
            qualification.testChange("WINNER2006");
            container.store(qualification);
          }
    } finally  {
      container.close();
    }
    printQualification();
    }</pre>
            <p>You can use either build-in Java enums or write your own. Db4o will take care of keeping object references unique and database file as small as possible.</p>
        </p>
        <p MadCap:conditions="Global.Primary:java" />
        <p MadCap:conditions="Primary.Online">Download example code:</p>
        <p MadCap:conditions="Primary.Online">
            <MadCap:conditionalText MadCap:conditions="Primary.Java"><a href="enumsjava.zip">Java </a>
            </MadCap:conditionalText>
        </p>
        <script type="text/javascript" src="../../../SkinSupport/MadCapBodyEnd.js">
        </script>
    </body>
</html>