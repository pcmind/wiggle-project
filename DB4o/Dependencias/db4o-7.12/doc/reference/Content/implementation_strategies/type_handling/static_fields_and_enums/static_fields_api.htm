<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="2" MadCap:lastHeight="120" MadCap:lastWidth="624" MadCap:disableMasterStylesheet="true" MadCap:tocPath="Implementation Strategies|Type Handling|Static Fields And Enums" MadCap:InPreviewMode="false" MadCap:RuntimeFileType="Topic" MadCap:TargetType="WebHelp" MadCap:PathToHelpSystem="../../../../" MadCap:HelpSystemFileName="index.xml" MadCap:SearchType="Stem">
    <head><title>Static fields API	</title>
        <script type="text/javascript">/* <![CDATA[ */
			window.onload = function(){
                             prettyPrint();
			};
                /* ]]> */</script>
        <link href="../../../SkinSupport/MadCap.css" rel="stylesheet" />
        <link href="../../../Resources/Stylesheets/OnlineStyle.css" rel="stylesheet" />
        <script src="../../../Resources/Code/prettify.js">
        </script>
        <script src="../../../Resources/Code/lang-vb.js">
        </script>
        <script src="../../../SkinSupport/MadCapAll.js" type="text/javascript">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink" style="display: none;"><a href="../../../../index_CSH.html#implementation_strategies/type_handling/static_fields_and_enums/static_fields_api.htm" style="">Open topic with navigation</a>
        </p>
        <div class="MCBreadcrumbsBox"><span class="MCBreadcrumbsPrefix">You are here: </span><a class="MCBreadcrumbsLink" href="../../../implementation_strategies.htm">Implementation Strategies</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="../../type_handling.htm">Type Handling</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="../static_fields_and_enums.htm">Static Fields And Enums</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">Static Fields API</span>
        </div>
        <p>
            <script type="text/javascript">/*<![CDATA[*/document.write('<a href="' + location.href +'">');
				document.write("Direct Link");
			document.write('</a>');/*]]>*/</script>
        </p>
        <p>
        </p>
        <h1>Static fields API</h1>
        <p>By default db4o does not persist static fields. Normally this is not necessary as static values are set for a class, not for an object. However you can set up db4o to store static fields if you need to implement constant or enumeration:</p>
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <p>Java: </p>
            <p><code>Db4o.configure().objectClass(Foo.class).persistStaticFieldValues() </code>
            </p>
        </p>
        <p MadCap:conditions="Global.Primary:java" />
        <p MadCap:conditions="Global.Primary:cs" />
        <p MadCap:conditions="Global.Primary:vb" />
        <p>Do not use this option unnecessarily, as it will slow down the process of opening database files and the stored objects will occupy space in the database file.</p>
        <p>This option does not have any effect on primitive types (int, boolean, etc). Use their object alternatives instead (Integer, Boolean, etc).</p>
        <p>When this setting is on for a specific class, all non-primitive-typed static field values of this class are stored the first time an object of the class is stored, and restored, every time a database file is opened afterwards, after class meta information is loaded for this class (when the class objects are retrieved with a query, for example).</p>
        <p>A good example of non-primitive constant type is type-safe enumeration implementation:</p>
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <pre class="prettyprint" xml:space="preserve">PilotCategories.java
/**//* Copyright (C) 2004 - 2007 Versant Inc. http://www.db4o.com */

package com.db4odoc.staticfields;

public class PilotCategories  {
  private String qualification = null;

  public final static PilotCategories WINNER = new PilotCategories(
      "WINNER");

  public final static PilotCategories TALENTED = new PilotCategories(
      "TALENTED");

  public final static PilotCategories AVERAGE = new PilotCategories(
      "AVERAGE");

  public final static PilotCategories DISQUALIFIED = new PilotCategories(
      "DISQUALIFIED");

  private PilotCategories(String qualification)  {
    this.qualification = qualification;
  }

  public PilotCategories()  {

  }

  public void testChange(String qualification)  {
    this.qualification = qualification;
  }

  public String toString()  {
    return qualification;
  }

}</pre>
        </p>
        <p MadCap:conditions="Global.Primary:java" />
        <p MadCap:conditions="Global.Primary:cs" />
        <p MadCap:conditions="Global.Primary:vb" />
        <p>Let's use it with </p>
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <pre class="prettyprint" xml:space="preserve">Pilot.java
/**//* Copyright (C) 2004 - 2007 Versant Inc. http://www.db4o.com */

package com.db4odoc.staticfields;

public class Pilot  {
  private String name;

  private PilotCategories category;

  public Pilot(String name, PilotCategories category)  {
    this.name = name;
    this.category = category;
  }

  public PilotCategories getCategory()  {
    return category;
  }

  public String getName()  {
    return name;
  }

  public String toString()  {
    return name + "/" + category;
  }
}</pre>
        </p>
        <p MadCap:conditions="Global.Primary:java" />
        <p MadCap:conditions="Global.Primary:cs" />
        <p MadCap:conditions="Global.Primary:vb" />
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <pre class="prettyprint" xml:space="preserve">StaticFieldExample.java: setPilots
private static void setPilots()  {
    new File(DB4O_FILE_NAME).delete();
    ObjectContainer container = database();
    if (container != null)  {
      try  {
        container.store(new Pilot("Michael Schumacher",
            PilotCategories.WINNER));
        container.store(new Pilot("Rubens Barrichello",
            PilotCategories.TALENTED));
      } finally  {
        closeDatabase();
      }
    }
  }</pre>
        </p>
        <p MadCap:conditions="Global.Primary:java" />
        <p MadCap:conditions="Global.Primary:cs" />
        <p MadCap:conditions="Global.Primary:vb" />
        <p>We can try to save pilots with the default db4o settings:</p>
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <pre class="prettyprint" xml:space="preserve">StaticFieldExample.java: checkPilots
private static void checkPilots()  {
    ObjectContainer container = database();
    if (container != null)  {
      try  {
        ObjectSet result = container.query(Pilot.class);
        for (int x = 0; x &lt; result.size(); x++)  {
          Pilot pilot = (Pilot) result.queryByExample(x);
          if (pilot.getCategory() == PilotCategories.WINNER)  {
            System.out.println("Winner pilot: " + pilot);
          } else if (pilot.getCategory() == PilotCategories.TALENTED)  {
            System.out.println("Talented pilot: " + pilot);
          } else  {
            System.out.println("Uncategorized pilot: " + pilot);
          }
        }
      } finally  {
        closeDatabase();
      }
    }
  }</pre>
        </p>
        <p MadCap:conditions="Global.Primary:java" />
        <p MadCap:conditions="Global.Primary:cs" />
        <p MadCap:conditions="Global.Primary:vb" />
        <p>That does not work however. We will have to explicitly point out, which class's static fields we want to save:</p>
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <pre class="prettyprint" xml:space="preserve">StaticFieldExample.java: configure
private static void configure() {
    System.out.println("Saving static fields can be turned on for individual classes.");
    
    _configuration = Db4o.newConfiguration();
    _configuration.objectClass(PilotCategories.class)
        .persistStaticFieldValues();
  }</pre>
        </p>
        <p MadCap:conditions="Global.Primary:java" />
        <p MadCap:conditions="Global.Primary:cs" />
        <p MadCap:conditions="Global.Primary:vb" />
        <p>Try to save and check pilots again - you should see that with this configuration enumeration values are actually correctly bound to their runtime values. </p>
        <p>As it was mentioned before, it is important to keep static values in one place and do not allow different objects to modify them. If we try to change static value from the referencing object:</p>
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <pre class="prettyprint" xml:space="preserve">StaticFieldExample.java: updatePilots
private static void updatePilots()  {
    System.out
        .println("Updating PilotCategory in pilot reference:");
    ObjectContainer container = database();
    if (container != null) {
      try  {
        ObjectSet result = container.query(Pilot.class);
        for (int x = 0; x &lt; result.size(); x++)  {
          Pilot pilot = (Pilot) result.queryByExample(x);
          if (pilot.getCategory() == PilotCategories.WINNER)  {
            System.out.println("Winner pilot: " + pilot);
            PilotCategories pc = pilot.getCategory();
            pc.testChange("WINNER2006");
            container.store(pilot);
          }
        }
        printCategories(container);
      } finally  {
        closeDatabase();
      }
    }
  }</pre>
        </p>
        <p MadCap:conditions="Global.Primary:java" />
        <p MadCap:conditions="Global.Primary:cs" />
        <p MadCap:conditions="Global.Primary:vb" />
        <p>the value just does not change. You can check it with the <code>checkPilots</code> method above. </p>In order to update static field we will have to do that explicitly:

<p MadCap:conditions="Primary.Java,Primary.All languages"><pre class="prettyprint" xml:space="preserve">StaticFieldExample.java: updatePilotCategories
private static void updatePilotCategories()  {
    System.out.println("Updating PilotCategories explicitly:");
    ObjectContainer container = database();
    if (container != null) {
      try  {
        ObjectSet result = container.query(PilotCategories.class);
        for (int x = 0; x &lt; result.size(); x++)  {
          PilotCategories pc = (PilotCategories) result.queryByExample(x);
          if (pc == PilotCategories.WINNER)  {
            pc.testChange("WINNER2006");
            container.store(pc);
          }
        }
        printCategories(container);
      } finally  {
        closeDatabase();
      }
    }
    System.out.println("Change the value back:");
    container = database();
    if (container != null) {
      try  {
        ObjectSet result = container.query(PilotCategories.class);
        for (int x = 0; x &lt; result.size(); x++)  {
          PilotCategories pc = (PilotCategories) result.queryByExample(x);
          if (pc == PilotCategories.WINNER)  {
            pc.testChange("WINNER");
            container.store(pc);
          }
        }
        printCategories(container);
      } finally  {
        closeDatabase();
      }
    }
  }</pre></p><p MadCap:conditions="Global.Primary:java" /><p MadCap:conditions="Global.Primary:cs" /><p MadCap:conditions="Global.Primary:vb" />Please, check the result with the <code>checkPilots</code> method. You will see that the reference has changed correctly. 
<p>What about deletion? Similar to update we cannot delete static fields from the referenced object, but we can delete them directly from the database:</p><p MadCap:conditions="Primary.Java,Primary.All languages"><pre class="prettyprint" xml:space="preserve">StaticFieldExample.java: addDeleteConfiguration
private static void addDeleteConfiguration() {
    if (_configuration != null) {
      _configuration.objectClass(Pilot.class).cascadeOnDelete(true);
    }
  }</pre><pre class="prettyprint" xml:space="preserve">StaticFieldExample.java: deleteTest
private static void deleteTest()  {
    // use delete configuration
    ObjectContainer container = database();
    if (container != null) {
      try  {
        System.out.println("Deleting Pilots :");
        ObjectSet result = container.query(Pilot.class);
        for (int x = 0; x &lt; result.size(); x++)  {
          Pilot pilot = (Pilot) result.queryByExample(x);
          container.delete(pilot);
        }
        printCategories(container);
        System.out.println("Deleting PilotCategories :");
        result = container.query(PilotCategories.class);
        for (int x = 0; x &lt; result.size(); x++)  {
          container.delete(result.queryByExample(x));
        }
        printCategories(container);
      } finally  {
        closeDatabase();
      }
    }
  }</pre></p><p MadCap:conditions="Global.Primary:java" /><p MadCap:conditions="Global.Primary:cs" /><p MadCap:conditions="Global.Primary:vb" /><p MadCap:conditions="Primary.Online">Download example code:</p><p MadCap:conditions="Primary.Online"><MadCap:conditionalText MadCap:conditions="Primary.Java"><a href="staticfieldsjava.zip">Java </a></MadCap:conditionalText></p><script type="text/javascript" src="../../../SkinSupport/MadCapBodyEnd.js"></script></body>
</html>