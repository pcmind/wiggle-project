<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="2" MadCap:lastHeight="120" MadCap:lastWidth="624" MadCap:disableMasterStylesheet="true" MadCap:tocPath="Implementation Strategies|Storage" MadCap:InPreviewMode="false" MadCap:RuntimeFileType="Topic" MadCap:TargetType="WebHelp" MadCap:PathToHelpSystem="../../../" MadCap:HelpSystemFileName="index.xml" MadCap:SearchType="Stem">
    <head><title>CachingStorage	</title>
        <script type="text/javascript">/* <![CDATA[ */
			window.onload = function(){
                             prettyPrint();
			};
                /* ]]> */</script>
        <link href="../../SkinSupport/MadCap.css" rel="stylesheet" />
        <link href="../../Resources/Stylesheets/OnlineStyle.css" rel="stylesheet" />
        <script src="../../SkinSupport/MadCapAll.js">
        </script>
        <script src="../../Resources/Code/prettify.js">
        </script>
        <script src="../../Resources/Code/lang-vb.js">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink" style="display: none;"><a href="../../../index_CSH.html#implementation_strategies/storage/cachingstorage.htm" style="">Open topic with navigation</a>
        </p>
        <div class="MCBreadcrumbsBox"><span class="MCBreadcrumbsPrefix">You are here: </span><a class="MCBreadcrumbsLink" href="../../implementation_strategies.htm">Implementation Strategies</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="../storage.htm">Storage</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">CachingStorage	</span>
        </div>
        <p>
            <script type="text/javascript">/*<![CDATA[*/document.write('<a href="' + location.href +'">');
				document.write("Direct Link");
			document.write('</a>');/*]]>*/</script>
        </p>
        <p>
        </p>
        <h1><a name="kanchor73"></a>CachingStorage</h1>
        <p>CachingStorage
is db4o default storage. </p>
        <p>Default
implementation uses LRU/Q2 caching mechanism to reduce disk access times and
improve performance. You can find the LRU/Q2 description on the internet or you
can look for the concrete implementation in db4o source code: LRU2QCache,
LRU2QXCache and LRUCache. By default, CachingStorage class makes use of LRU2QCache,
however other implementations can be used as well, as it will be discussed
later.</p>
        <p>Cache is characterized by the amount of pages that
can be utilized and the page size. The multiplication of these 2 parameters
gives the maximum cache size that can be used.</p>
        <p>Bigger page size means faster handling of the
information as there is no need to switch between pages for longer. On the
other hand bigger page size will mean higher memory consumption, as memory will
be reserved for the whole page size, when the new page is needed. Modifying
these values and running performance tests, you can achieve the best
performance/memory consumption combination for your system. The default values
are the following:</p>
        <p>Page count = 64 
Page size = 1024,</p>
        <p>Which gives us a total of 64 KB of cache memory.</p>
        <p>In order to modify page size and amount use the
following configuration calls:</p>
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <p>Java:  </p>
            <p><code>// config is an instance of either EmbeddedConfiguration
or ServerConfiguration</code>
            </p>
            <p><code>config.file().storage(new CachingStorage(new
FileStorage(), PAGE_COUNT, PAGE_SIZE));</code>
            </p>
        </p>
        <p MadCap:conditions="Global.Primary:java" />
        <p MadCap:conditions="Global.Primary:cs" />
        <p MadCap:conditions="Global.Primary:vb" />
        <p>For more information on Page size and count please see
<a href="cachingstorage/cache_configuration_example.htm">Cache Configuration Example</a>.</p>
        <p>By default db4o uses LRU2QCache,which is a
simplified implementation of the 2 Queue algorithm described here:</p>
        <p><a href="http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.34.2641">http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1..34.2641</a>
        </p>
        <p>You can also make use of the full version of the algorithm
or a simple LRU, by overriding newCache/NewCache method in CachingStorage class:</p>
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <pre class="prettyprint" xml:space="preserve">FullLRUCachingStorage.java
/* Copyright (C) 2004 - 2009  Versant Corporation http://www.versant.com */
package com.db4odoc.<span class="MCPopup"><a href="javascript:void(0);" class="MCPopupSpot" onclick="FMCPopup( event, this ); return false;" MadCap:src="../storage.htm">Storage<img style="border: none;margin-left: 5px;" src="../../SkinSupport/ExpandingClosed.gif" MadCap:altsrc="../../SkinSupport/ExpandingOpen.gif" class="MCExpandingIcon" onload="if ( typeof( FMCPreloadImage ) == 'function' ) { FMCPreloadImage( '../../SkinSupport/ExpandingOpen.gif' ); }" /></a></span>;

import com.db4o.internal.caching.*;
import com.db4o.io.*;

public class FullLRUCachingStorage extends CachingStorage  {

  private int _pageCount = 64;
  
  public FullLRUCachingStorage(Storage storage)  {
    super(storage);
  }
  
  public FullLRUCachingStorage(Storage storage, int pageCount, int pageSize)  {
    super(storage, pageCount, pageSize);
    _pageCount = pageCount;
  }
  
  @Override
  protected Cache4&lt;Object, Object&gt; newCache()  {
    // for a simple LRU algorythm use CacheFactory.newLRUCache(_pageCount);
      return CacheFactory.new2QXCache(_pageCount);
    }

}</pre>
        </p>
        <p MadCap:conditions="Global.Primary:java" />
        <p MadCap:conditions="Global.Primary:cs" />
        <p MadCap:conditions="Global.Primary:vb" />
        <p>If you have a better idea of cache implementation
you are welcome to create it by overriding Cache4&lt;K,V&gt;(Java) or ICache4&lt;K,V&lt;(.NET) and using the new
implementation in the newCache/NewCache method in CachingStorage class as in the example
above.</p>
        <p MadCap:conditions="Primary.Online">Download example code:</p>
        <p MadCap:conditions="Primary.Online">
            <MadCap:conditionalText MadCap:conditions="Primary.Java"><a href="pluggable_storage/storagejava.zip">Java </a>
            </MadCap:conditionalText>
        </p>
        <script type="text/javascript" src="../../SkinSupport/MadCapBodyEnd.js">
        </script>
    </body>
</html>