<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="2" MadCap:lastHeight="120" MadCap:lastWidth="624" MadCap:disableMasterStylesheet="true" MadCap:tocPath="Implementation Strategies|Enhancement Tools|Complex Example" MadCap:InPreviewMode="false" MadCap:RuntimeFileType="Topic" MadCap:TargetType="WebHelp" MadCap:PathToHelpSystem="../../../../../" MadCap:HelpSystemFileName="index.xml" MadCap:SearchType="Stem">
    <head><title>Model Classes	</title>
        <script type="text/javascript">/* <![CDATA[ */
			window.onload = function(){
                             prettyPrint();
			};
                /* ]]> */</script>
        <link href="../../../../SkinSupport/MadCap.css" rel="stylesheet" />
        <link href="../../../../Resources/Stylesheets/OnlineStyle.css" rel="stylesheet" />
        <script src="../../../../Resources/Code/prettify.js">
        </script>
        <script src="../../../../Resources/Code/lang-vb.js">
        </script>
        <script src="../../../../SkinSupport/MadCapAll.js" type="text/javascript">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink" style="display: none;"><a href="../../../../../index_CSH.html#implementation_strategies/enhancement_tools/enhancement_for_java/complex_example/model_classes.htm" style="">Open topic with navigation</a>
        </p>
        <div class="MCBreadcrumbsBox"><span class="MCBreadcrumbsPrefix">You are here: </span><a class="MCBreadcrumbsLink" href="../../../../implementation_strategies.htm">Implementation Strategies</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="../../../enhancement_tools.htm">Enhancement Tools</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="../complex_example.htm">Complex Example</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">Model Classes</span>
        </div>
        <p>
            <script type="text/javascript">/*<![CDATA[*/document.write('<a href="' + location.href +'">');
				document.write("Direct Link");
			document.write('</a>');/*]]>*/</script>
        </p>
        <p>
        </p>
        <h1>Model Classes</h1>
        <p>Two simple classes Pilot and Id are pre-packed in a
Pilot.jar:

</p>
        <pre class="prettyprint" xml:space="preserve">Pilot.java
/**//* Copyright (C) 2007  Versant Inc.  http://www.db4o.com */
package enhancement.model;

public class Pilot  {
  String _name;
  Id _id;
  
  public Pilot(String name, Id id) {
    _name = name;
    _id = id;
  }
  
  public String get_name()  {
    return _name;
  }
  public void set_name(String _name)  {
    this._name = _name;
  }
  public Id get_id()  {
    return _id;
  }
  public void set_id(Id _id)  {
    this._id = _id;
  }
  
  public String toString() {
    return _name + ": " + _id;
  }
}</pre>
        <pre class="prettyprint" xml:space="preserve">Id.java
/**//* Copyright (C) 2007  Versant Inc.  http://www.db4o.com */
package enhancement.model;

public class Id  {
  String _id;
  
  public Id(String id) {
    _id = id;
  }
  
  public String toString() {
    return _id;
  }
}</pre>Linked collection of Car objects shows collection
enhancement:

<pre class="prettyprint" xml:space="preserve">Car.java
package enhancement.model;

import tacustom.*;

@Db4oPersistent
public class Car  {

  private String _model = null;
  Pilot _pilot;

  public Car(String content, Pilot pilot)  {
    _model = content;
    _pilot = pilot;
  }
  
  public String content()  {
    return _model;
  }

  public void content(String content)  {
    _model = content;
  }
  
  @Override
  public String toString()  {
    return _model + "/" + _pilot;
  }

  public String getModel()  {
    return _model;
  }

  public Pilot getPilot()  {
    return _pilot;
  }
}</pre><pre class="prettyprint" xml:space="preserve">MaintenanceQueue.java
/** Copyright (C) 2007  Versant Inc.  http://www.db4o.com */

package enhancement.model;

import java.util.*;

import tacustom.*;

@Db4oPersistent

public class MaintenanceQueue&lt;Item&gt;  {

  public MaintenanceQueue&lt;Item&gt; _next;
  
  private Item _value;

  public MaintenanceQueue(Item value)  {
    _value = value;
  }

  public static MaintenanceQueue&lt;Integer&gt; newList(int depth)  {
    if (depth == 0)  {
      return null;
    }
    MaintenanceQueue&lt;Integer&gt; head = new MaintenanceQueue&lt;Integer&gt;(depth);
    head._next = newList(depth - 1);
    return head;
  }

  /** *//**
   * Overrides this method to assert that &lt;code&gt;other&lt;/code&gt; is only
   * activated with depth 1.
   */
  @SuppressWarnings("unchecked")
  public boolean equals(Object other)  {
    return ((MaintenanceQueue&lt;Item&gt;) other)._next == null;
  }

  public boolean hasNext()  {
    return _next != null;
  }

  public MaintenanceQueue&lt;Item&gt; next()  {
    return _next;
  }

  public int size()  {
    if(_next == null)  {
      return 1;
    }
    return _next.size() + 1;
  }
  
  public Item get(int idx)  {
    if(idx == 0)  {
      return value();
    }
    return _next.queryByExample(idx - 1);
  }

  public Item value()  {
    return _value;
  }
  
  public void add(Item item)  {
    if(_next != null)  {
      _next.add(item);
    }
    else  {
      _next = new MaintenanceQueue&lt;Item&gt;(item);
    }
  }
  
  public Iterator&lt;Item&gt; iterator()  {
    return new LinkedListIterator&lt;Item&gt;(this);
  }
  
  public String toString()  {
    return "LinkedList: " + _value;
  }
  
  public static &lt;Item&gt; MaintenanceQueue&lt;Item&gt; add(MaintenanceQueue&lt;Item&gt; list, Item item)  {
    if(list == null)  {
      return new MaintenanceQueue&lt;Item&gt;(item);
    }
    list.add(item);
    return list;
  }

  private final static class LinkedListIterator&lt;Item&gt; implements Iterator&lt;Item&gt;  {
    private MaintenanceQueue&lt;Item&gt; _current;
    
    public LinkedListIterator(MaintenanceQueue&lt;Item&gt; list)  {
      _current = list;
    }

    public boolean hasNext()  {
      return _current != null;
    }

    public Item next()  {
      Item item = _current.value();
      _current  = _current.next();
      return item;
    }

    public void remove()  {
      throw new UnsupportedOperationException();
    }
  }

  public static &lt;Item&gt; Iterator&lt;Item&gt; iterator(MaintenanceQueue&lt;Item&gt; list)  {
    return (list == null ? new LinkedListIterator&lt;Item&gt;(null) : list.iterator());
  }

}</pre><p MadCap:conditions="Primary.Online">Download example code:</p><p MadCap:conditions="Primary.Online"><MadCap:conditionalText MadCap:conditions="Primary.Java"><a href="enhancementexamplejava.zip">Java </a></MadCap:conditionalText></p><script type="text/javascript" src="../../../../SkinSupport/MadCapBodyEnd.js"></script></body>
</html>