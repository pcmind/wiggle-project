<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="2" MadCap:lastHeight="120" MadCap:lastWidth="624" MadCap:disableMasterStylesheet="true" MadCap:tocPath="Implementation Strategies|Aliases" MadCap:InPreviewMode="false" MadCap:RuntimeFileType="Topic" MadCap:TargetType="WebHelp" MadCap:PathToHelpSystem="../../../" MadCap:HelpSystemFileName="index.xml" MadCap:SearchType="Stem">
    <head><title>Cross-Platform Aliasing From .NET To Java	</title>
        <script type="text/javascript">/* <![CDATA[ */
			window.onload = function(){
                             prettyPrint();
			};
                /* ]]> */</script>
        <link href="../../SkinSupport/MadCap.css" rel="stylesheet" />
        <link href="../../Resources/Stylesheets/OnlineStyle.css" rel="stylesheet" />
        <script src="../../Resources/Code/prettify.js">
        </script>
        <script src="../../Resources/Code/lang-vb.js">
        </script>
        <script src="../../SkinSupport/MadCapAll.js" type="text/javascript">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink" style="display: none;"><a href="../../../index_CSH.html#implementation_strategies/aliases/cross-platform_aliasing_from_.net_to_java.htm" style="">Open topic with navigation</a>
        </p>
        <div class="MCBreadcrumbsBox"><span class="MCBreadcrumbsPrefix">You are here: </span><a class="MCBreadcrumbsLink" href="../../implementation_strategies.htm">Implementation Strategies</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="../aliases.htm">Aliases</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">Cross-Platform Aliasing From .NET To Java</span>
        </div>
        <p>
            <script type="text/javascript">/*<![CDATA[*/document.write('<a href="' + location.href +'">');
				document.write("Direct Link");
			document.write('</a>');/*]]>*/</script>
        </p>
        <p>
        </p>
        <h1>Cross-Platform Aliasing From .NET To Java</h1>
        <p>The following example shows a cross-platform system where classes were saved to the
db4o database from a .NET application and read and modified later from a
.Java application. A vice versa example is reviewed in
<a href="cross-platform_aliasing.htm">Cross-Platform Aliasing</a>. </p>
        <p>Pilot objects are saved to a database from a .NET
application:</p>
        <pre class="prettyprint" xml:space="preserve">InterLanguageExample2.cs: SaveObjects
private static void SaveObjects()
         {
            File.Delete(Db4oFileName);
            IObjectContainer container = Db4oEmbedded.OpenFile(
Db4oEmbedded.NewConfiguration(), Db4oFileName);
            try
             {
                Pilot pilot = new Pilot("David Barrichello", 99);
                container.Store(pilot);
                pilot = new Pilot("Michael Schumacher", 100);
                container.Store(pilot);
            }
            finally
             {
                container.Close();
            }
        }</pre>
        <p>In order to read the saved objects successfully from a java
application
we will need to define an alias for persistent classes and add DotnetSupport to configuration. DotnetSupport is a special configuration item, which includes aliases for all internal db4o classes, which might be referenced in the database file We will use a <a href="wildcardalias.htm">WildcardAlias</a> to match the definitions for Java and .NET
persistent classes. It is important to remember that persistent classes in package/namespace specified in WildcardAlias must have the same names and same field names to be matched: </p>
        <pre class="prettyprint" xml:space="preserve">InterLanguageExample2.java: configureAlias
private static EmbeddedConfiguration configureAlias()  {
    EmbeddedConfiguration configuration = Db4oEmbedded.newConfiguration();
    configuration.common().addAlias(new WildcardAlias(
        "Db4odoc.Aliases.*, Db4odoc",
        "com.db4odoc.aliases.*"));
    configuration.common().add(new DotnetSupport(false));    
    return configuration;
  }</pre>w the objects are accessible from the Java application:<pre class="prettyprint" xml:space="preserve">InterLanguageExample2.java: getObjects
private static void getObjects(EmbeddedConfiguration configuration)  {
    ObjectContainer db = Db4oEmbedded.openFile(configuration, DB4O_FILE_NAME);
    try  {
      List&lt;Pilot&gt; result = db.query(new Predicate&lt;Pilot&gt;()  {
        public boolean match(Pilot pilot)  {
          return true;
        }
      });
      for (int i = 0; i &lt; result.size(); i++)  {
        Pilot pilot = result.queryByExample(i);
        pilot.setName("Modified " + pilot.getName());
        db.store(pilot);
      }
      listResult(result);
    } finally  {
      db.close();
    }
  }</pre>We
can read the database from the initial .NET application again. Note,
that no alias is required as the class definitions were created in this application :<pre class="prettyprint" xml:space="preserve">InterLanguageExample2.cs: ReadObjects
private static void ReadObjects()
         {
            IObjectContainer container = Db4oEmbedded.OpenFile(
Db4oEmbedded.NewConfiguration(), Db4oFileName);
            try
             {
                IList&lt;Pilot&gt; result = container.Query&lt;Pilot&gt;();
                ListResult(result);
            }
            finally
             {
                container.Close();
            }
        }</pre><script type="text/javascript" src="../../SkinSupport/MadCapBodyEnd.js"></script></body>
</html>