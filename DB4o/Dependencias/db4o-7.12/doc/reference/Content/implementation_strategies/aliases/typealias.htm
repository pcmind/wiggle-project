<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="2" MadCap:lastHeight="120" MadCap:lastWidth="624" MadCap:disableMasterStylesheet="true" MadCap:tocPath="Implementation Strategies|Aliases" MadCap:InPreviewMode="false" MadCap:RuntimeFileType="Topic" MadCap:TargetType="WebHelp" MadCap:PathToHelpSystem="../../../" MadCap:HelpSystemFileName="index.xml" MadCap:SearchType="Stem">
    <head><title>TypeAlias	</title>
        <script type="text/javascript">/* <![CDATA[ */
			window.onload = function(){
                             prettyPrint();
			};
                /* ]]> */</script>
        <link href="../../SkinSupport/MadCap.css" rel="stylesheet" />
        <link href="../../Resources/Stylesheets/OnlineStyle.css" rel="stylesheet" />
        <script src="../../Resources/Code/prettify.js">
        </script>
        <script src="../../Resources/Code/lang-vb.js">
        </script>
        <script src="../../SkinSupport/MadCapAll.js" type="text/javascript">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink" style="display: none;"><a href="../../../index_CSH.html#implementation_strategies/aliases/typealias.htm" style="">Open topic with navigation</a>
        </p>
        <div class="MCBreadcrumbsBox"><span class="MCBreadcrumbsPrefix">You are here: </span><a class="MCBreadcrumbsLink" href="../../implementation_strategies.htm">Implementation Strategies</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="../aliases.htm">Aliases</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">TypeAlias</span>
        </div>
        <p>
            <script type="text/javascript">/*<![CDATA[*/document.write('<a href="' + location.href +'">');
				document.write("Direct Link");
			document.write('</a>');/*]]>*/</script>
        </p>
        <p>
        </p>
        <h1>TypeAlias</h1>
        <p>TypeAlias
constructor accepts 2 parameters: </p>
        <ul>
            <li value="1">stored class name - storedType</li>
            <li value="2">runtime class name - runtimeType</li>
        </ul>
        <p>Note that the runtimeType class should exist in your
application when you configure the alias.</p>
        <p>The alias matches are found by comparing full names of the stored and
runtime classes</p>
        <p>Let's declare a new TypeAlias</p>
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <p>Java:</p>
            <p><code>private static TypeAlias tAlias;</code>
            </p>
        </p>
        <p MadCap:conditions="Global.Primary:java" />
        <p MadCap:conditions="Global.Primary:cs" />
        <p MadCap:conditions="Global.Primary:vb" />
        <p>The following method will initialize tAlias and configure db4o to use
it:</p>
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <pre class="prettyprint" xml:space="preserve">AliasExample.java: configureClassAlias
private static EmbeddedConfiguration configureClassAlias()  {
    // create a new alias
    tAlias = new TypeAlias("com.db4odoc.aliases.Pilot",
        "com.db4odoc.aliases.Driver");
    // add the alias to the db4o configuration
    EmbeddedConfiguration configuration = Db4oEmbedded.newConfiguration();
    configuration.common().addAlias(tAlias);
    // check how does the alias resolve
    System.out.println("Stored name for com.db4odoc.aliases.Driver: "
        + tAlias.resolveRuntimeName("com.db4odoc.aliases.Driver"));
    System.out.println("Runtime name for com.db4odoc.aliases.Pilot: "
        + tAlias.resolveStoredName("com.db4odoc.aliases.Pilot"));
    return configuration;
  }</pre>
        </p>
        <p MadCap:conditions="Global.Primary:java" />
        <p MadCap:conditions="Global.Primary:cs" />
        <p MadCap:conditions="Global.Primary:vb" />
        <p>We can always check the results of adding an alias using
resolveRuntimeName and resolveStoredName as you see in the example. Basically
the same methods are used internally by db4o to resolve aliased names.</p>
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <pre class="prettyprint" xml:space="preserve">AliasExample.java: saveDrivers
private static void saveDrivers(EmbeddedConfiguration configuration)  {
    new File(DB4O_FILE_NAME).delete();
    ObjectContainer container = Db4oEmbedded.openFile(configuration,
        DB4O_FILE_NAME);
    try  {
      Driver driver = new Driver("David Barrichello", 99);
      container.store(driver);
      driver = new Driver("Kimi Raikkonen", 100);
      container.store(driver);
    } finally  {
      container.close();
    }
  }</pre>
        </p>
        <p MadCap:conditions="Global.Primary:java" />
        <p MadCap:conditions="Global.Primary:cs" />
        <p MadCap:conditions="Global.Primary:vb" />
        <p>Due to the alias
configured the database will have Pilot classes saved. You can check it using
ObjectManager</p>
        <p MadCap:conditions="Primary.Online">Download example code:</p>
        <p MadCap:conditions="Primary.Online">
            <MadCap:conditionalText MadCap:conditions="Primary.Java"><a href="aliasesjava.zip">Java </a>
            </MadCap:conditionalText>
        </p>
        <script type="text/javascript" src="../../SkinSupport/MadCapBodyEnd.js">
        </script>
    </body>
</html>