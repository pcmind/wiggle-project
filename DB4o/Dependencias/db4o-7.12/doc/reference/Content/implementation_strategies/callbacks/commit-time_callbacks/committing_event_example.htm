<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="2" MadCap:lastHeight="120" MadCap:lastWidth="624" MadCap:disableMasterStylesheet="true" MadCap:tocPath="Implementation Strategies|Callbacks|Commit-Time Callbacks" MadCap:InPreviewMode="false" MadCap:RuntimeFileType="Topic" MadCap:TargetType="WebHelp" MadCap:PathToHelpSystem="../../../../" MadCap:HelpSystemFileName="index.xml" MadCap:SearchType="Stem">
    <head><title>Committing Event Example	</title>
        <script type="text/javascript">/* <![CDATA[ */
			window.onload = function(){
                             prettyPrint();
			};
                /* ]]> */</script>
        <link href="../../../SkinSupport/MadCap.css" rel="stylesheet" />
        <link href="../../../Resources/Stylesheets/OnlineStyle.css" rel="stylesheet" />
        <script src="../../../Resources/Code/prettify.js">
        </script>
        <script src="../../../Resources/Code/lang-vb.js">
        </script>
        <script src="../../../SkinSupport/MadCapAll.js" type="text/javascript">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink" style="display: none;"><a href="../../../../index_CSH.html#implementation_strategies/callbacks/commit-time_callbacks/committing_event_example.htm" style="">Open topic with navigation</a>
        </p>
        <div class="MCBreadcrumbsBox"><span class="MCBreadcrumbsPrefix">You are here: </span><a class="MCBreadcrumbsLink" href="../../../implementation_strategies.htm">Implementation Strategies</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="../../callbacks.htm">Callbacks</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="../commit-time_callbacks.htm">Commit-Time Callbacks</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">Committing Event Example</span>
        </div>
        <p>
            <script type="text/javascript">/*<![CDATA[*/document.write('<a href="' + location.href +'">');
				document.write("Direct Link");
			document.write('</a>');/*]]>*/</script>
        </p>
        <p>
        </p>
        <h1>Committing Event Example</h1>
        <p>Let's look at an example of <code>committing</code> event usage. In this example <code>committing</code> callback will be used to
ensure that only unique objects can be saved to the database. Duplicate objects
- objects, which have the same fields - will cause an exception at the commit
time.</p>
        <p>We will use a simple Item class for an example:</p>
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <pre class="prettyprint" xml:space="preserve">Item.java
/**//* Copyright (C) 2007 Versant Inc. http://www.db4o.com */

package com.db4odoc.commitcallbacks;


public class Item  {
  private int _number;
  private String _word;
  
  public Item(int number, String word) {
    _number = number;
    _word = word;
  }
  
  public String getWord() {
    return _word;
  }
  
  public int getNumber() {
    return _number;
  }
  
  public String toString() {
    return _number + "/" + _word;
  }
}</pre>
        </p>
        <p MadCap:conditions="Global.Primary:java" />
        <p MadCap:conditions="Global.Primary:cs" />
        <p MadCap:conditions="Global.Primary:vb" />
        <p>The
following methods will configure a commit-time callback method for uniqueness
check:</p>
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <pre class="prettyprint" xml:space="preserve">CommitCallbackExample.java: configure
private static void configure()  {
    EventRegistry registry = EventRegistryFactory
        .forObjectContainer(container());
    // register an event handler, which will check object uniqueness on
    // commit
    registry.committing().addListener(new EventListener4()  {
      public void onEvent(Event4 e, EventArgs args)  {
        CommitEventArgs commitArgs = ((CommitEventArgs) args);
        // uniqueness should be checked for both added and updated
        // objects
        checkUniqueness(commitArgs.added());
        checkUniqueness(commitArgs.updated());
      }
    });
  }</pre>
            <pre class="prettyprint" xml:space="preserve">CommitCallbackExample.java: checkUniqueness
private static void checkUniqueness(ObjectInfoCollection collection)  {
    Iterator4 iterator = collection.iterator();
    while (iterator.moveNext())  {
      ObjectInfo info = (ObjectInfo) iterator.current();
      // only check for Item objects
      if (info.getObject() instanceof Item)  {
        Item item = (Item) info.getObject();
        // search for objects with the same fields in the database
        List found = container().queryByExample(
            new Item(item.getNumber(), item.getWord()));
        if (found.size() &gt; 1)  {
          throw new Db4oException("Object is not unique: " + item);
        }
      }
    }
  }</pre>
        </p>
        <p MadCap:conditions="Global.Primary:java" />
        <p MadCap:conditions="Global.Primary:cs" />
        <p MadCap:conditions="Global.Primary:vb" />
        <p>let's
save one initial object <code>Item(1,"one")</code></p>
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <pre class="prettyprint" xml:space="preserve">CommitCallbackExample.java: storeFirstObject
private static void storeFirstObject()  {
    ObjectContainer container = container();
    try  {
      // creating and storing item1 to the database
      Item item = new Item(1, "one");
      container.store(item);
      // no problems here
      container.commit();
    } catch (Db4oException ex)  {
      System.out.println(ex.getMessage());
      container.rollback();
    }
  }</pre>
        </p>
        <p MadCap:conditions="Global.Primary:java" />
        <p MadCap:conditions="Global.Primary:cs" />
        <p MadCap:conditions="Global.Primary:vb" />
        <p>Now
we can check the functionality of the <code>committing</code> callback using
the following code:</p>
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <pre class="prettyprint" xml:space="preserve">CommitCallbackExample.java: storeOtherObjects
private static void storeOtherObjects()  {
    ObjectContainer container = container();
    // creating and storing similar items to the database
    Item item = new Item(2, "one");
    container.store(item);
    item = new Item(1, "two");
    container.store(item);
    try  {
      // commit should work as there were no duplicate objects
      container.commit();
    } catch (Db4oException ex)  {
      System.out.println(ex.getMessage());
      container.rollback();
    }
    System.out.println("Commit successful");

    // trying to save a duplicate object to the database
    item = new Item(1, "one");
    container.store(item);
    try  {
      // Commit should fail as duplicates are not allowed
      container.commit();
    } catch (Db4oException ex)  {
      System.out.println(ex.getMessage());
      container.rollback();
    }
  }</pre>
        </p>
        <p MadCap:conditions="Global.Primary:java" />
        <p MadCap:conditions="Global.Primary:cs" />
        <p MadCap:conditions="Global.Primary:vb" />
        <p MadCap:conditions="Primary.Online">Download example code:</p>
        <p MadCap:conditions="Primary.Online">
            <MadCap:conditionalText MadCap:conditions="Primary.Java"><a href="commitcallbacksjava.zip">Java </a>
            </MadCap:conditionalText>
        </p>
        <script type="text/javascript" src="../../../SkinSupport/MadCapBodyEnd.js">
        </script>
    </body>
</html>