<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="2" MadCap:lastHeight="120" MadCap:lastWidth="624" MadCap:disableMasterStylesheet="true" MadCap:tocPath="Implementation Strategies|Callbacks|Possible Usecases" MadCap:InPreviewMode="false" MadCap:RuntimeFileType="Topic" MadCap:TargetType="WebHelp" MadCap:PathToHelpSystem="../../../../" MadCap:HelpSystemFileName="index.xml" MadCap:SearchType="Stem">
    <head><title>Referential Integrity	</title>
        <script type="text/javascript">/* <![CDATA[ */
			window.onload = function(){
                             prettyPrint();
			};
                /* ]]> */</script>
        <link href="../../../SkinSupport/MadCap.css" rel="stylesheet" />
        <link href="../../../Resources/Stylesheets/OnlineStyle.css" rel="stylesheet" />
        <script src="../../../Resources/Code/prettify.js">
        </script>
        <script src="../../../Resources/Code/lang-vb.js">
        </script>
        <script src="../../../SkinSupport/MadCapAll.js" type="text/javascript">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink" style="display: none;"><a href="../../../../index_CSH.html#implementation_strategies/callbacks/possible_usecases/referential_integrity.htm" style="">Open topic with navigation</a>
        </p>
        <div class="MCBreadcrumbsBox"><span class="MCBreadcrumbsPrefix">You are here: </span><a class="MCBreadcrumbsLink" href="../../../implementation_strategies.htm">Implementation Strategies</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="../../callbacks.htm">Callbacks</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="../possible_usecases.htm">Possible Usecases</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">Referential Integrity</span>
        </div>
        <p>
            <script type="text/javascript">/*<![CDATA[*/document.write('<a href="' + location.href +'">');
				document.write("Direct Link");
			document.write('</a>');/*]]>*/</script>
        </p>
        <p>
        </p>
        <h1>Referential Integrity</h1>
        <p>Db4o does not have a built-in referential integrity checking
mechanism. Luckily EventRegistry gives you access to all the necessary events
to implement it. You will just need to trigger validation on create, update or
delete and cancel the action if the integrity is going to be broken.</p>
        <p>For example, if Car object is referencing Pilot and the
referenced object should exist, this can be ensured with the following handler
in deleting() event:</p>
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <pre class="prettyprint" xml:space="preserve">CallbacksExample.java: testIntegrityCheck
private static void testIntegrityCheck()  {
    fillDB();
    final ObjectContainer container = Db4oEmbedded.openFile(DB4O_FILE_NAME);
    try  {
      EventRegistry registry = EventRegistryFactory
          .forObjectContainer(container);
      // register an event handler, which will stop deleting a pilot when
      // it is referenced from a car
      registry.deleting().addListener(new EventListener4()  {
        public void onEvent(Event4 e, EventArgs args)  {
          CancellableObjectEventArgs cancellableArgs = ((CancellableObjectEventArgs) args);
          Object obj = cancellableArgs.object();
          if (obj instanceof Pilot)  {
            Query q = container.query();
            q.constrain(Car.class);
            q.descend("pilot").constrain(obj);
            ObjectSet result = q.execute();
            if (result.size() &gt; 0)  {
              System.out
                  .println("Object "
                      + (Pilot) obj
                      + " can't be deleted as object container has references to it");
              cancellableArgs.cancel();
            }
          }
        }
      });

      // check the contents of the database
      List result = container.queryByExample(null);
      listResult(result);

      // try to delete all the pilots
      List&lt;Pilot&gt; pilots = container.query(Pilot.class);
      for (Pilot p: pilots)  {
        container.delete(p);
      }
      // check if any of the objects were deleted
      result = container.queryByExample(null);
      listResult(result);
    } finally  {
      container.close();
    }
  }</pre>
        </p>
        <p MadCap:conditions="Global.Primary:java" />
        <p MadCap:conditions="Global.Primary:cs" />
        <p MadCap:conditions="Global.Primary:vb" />
        <p>You can also add handlers for creating() and updating()
events for a Car object to make sure that the pilot field is not null. 
</p>
        <p>Note, that in client/server mode deleting event is only raised on the server side, therefore the code above can't be used and will throw an exception.  </p>
        <p MadCap:conditions="Primary.Online">Download example code:</p>
        <p MadCap:conditions="Primary.Online">
            <MadCap:conditionalText MadCap:conditions="Primary.Java"><a href="../callbacksjava.zip">Java </a>
            </MadCap:conditionalText>
        </p>
        <script type="text/javascript" src="../../../SkinSupport/MadCapBodyEnd.js">
        </script>
    </body>
</html>