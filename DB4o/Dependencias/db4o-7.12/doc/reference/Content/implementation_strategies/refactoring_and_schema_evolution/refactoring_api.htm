<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="2" MadCap:lastHeight="120" MadCap:lastWidth="624" MadCap:disableMasterStylesheet="true" MadCap:tocPath="Implementation Strategies|Refactoring And Schema Evolution" MadCap:InPreviewMode="false" MadCap:RuntimeFileType="Topic" MadCap:TargetType="WebHelp" MadCap:PathToHelpSystem="../../../" MadCap:HelpSystemFileName="index.xml" MadCap:SearchType="Stem">
    <head><title>Refactoring API	</title>
        <script type="text/javascript">/* <![CDATA[ */
			window.onload = function(){
                             prettyPrint();
			};
                /* ]]> */</script>
        <link href="../../SkinSupport/MadCap.css" rel="stylesheet" />
        <link href="../../Resources/Stylesheets/OnlineStyle.css" rel="stylesheet" />
        <script src="../../SkinSupport/MadCapAll.js">
        </script>
        <script src="../../Resources/Code/prettify.js">
        </script>
        <script src="../../Resources/Code/lang-vb.js">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink" style="display: none;"><a href="../../../index_CSH.html#implementation_strategies/refactoring_and_schema_evolution/refactoring_api.htm" style="">Open topic with navigation</a>
        </p>
        <div class="MCBreadcrumbsBox"><span class="MCBreadcrumbsPrefix">You are here: </span><a class="MCBreadcrumbsLink" href="../../implementation_strategies.htm">Implementation Strategies</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="../refactoring_and_schema_evolution.htm">Refactoring And Schema Evolution</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">Refactoring API</span>
        </div>
        <p>
            <script type="text/javascript">/*<![CDATA[*/document.write('<a href="' + location.href +'">');
				document.write("Direct Link");
			document.write('</a>');/*]]>*/</script>
        </p>
        <p>
        </p>
        <h1>Refactoring API<a name="kanchor88"></a><a name="kanchor89"></a></h1>
        <p>Db4o provides special API which can help you to move classes between packages (Java)/namespaces(.NET), rename classes or fields:</p>
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <p>Java: <br /><code>Db4o.configure()<br />.objectClass("package.class").rename("newPackage.newClass"); <br />Db4o.configure().objectClass("package.class").<br />objectField("oldField").rename("newField");<br /></code></p>
        </p>
        <p MadCap:conditions="Global.Primary:java" />
        <p MadCap:conditions="Global.Primary:cs" />
        <p MadCap:conditions="Global.Primary:vb" />
        <p>The safe order of actions for rename calls is:</p>
        <ol>
            <li value="1"><span class="MCPopup"><a href="javascript:void(0);" class="MCPopupSpot" onclick="FMCPopup( event, this ); return false;" MadCap:src="../maintenance/backup.htm">Backup<img style="border: none;margin-left: 5px;" src="../../SkinSupport/ExpandingClosed.gif" MadCap:altsrc="../../SkinSupport/ExpandingOpen.gif" class="MCExpandingIcon" onload="if ( typeof( FMCPreloadImage ) == 'function' ) { FMCPreloadImage( '../../SkinSupport/ExpandingOpen.gif' ); }" /></a></span> you database and application </li>
            <li value="2">Close all open objectContainers if any </li>
            <li value="3">Rename classes or fields or copy classes to the new package/namespace in your application. (Do not remove old classes yet).</li>
            <li value="4">Issue ObjectClass#rename and objectField#rename calls without having an <MadCap:conditionalText MadCap:conditions="Primary.Java">ObjectContainer</MadCap:conditionalText> open.</li>
            <li value="5">Open database file and close it again without actually working with it.</li>
            <li value="6">Remove old classes (if applicable).</li>
        </ol>
        <p>After that you will only see the new classes/fields in ObjectManager, the old ones will be gone.</p>
        <p>Let's look how it works on an example. We will use initial class Pilot:</p>
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <pre class="prettyprint" xml:space="preserve">Pilot.java
/**//* Copyright (C) 2004 - 2007 Versant Inc. http://www.db4o.com */

package com.db4odoc.refactoring;

public class Pilot  {
  private String name;

  public Pilot(String name)  {
    this.name = name;
  }

  public String getName()  {
    return name;
  }

  public String toString()  {
    return name;
  }
}</pre>
        </p>
        <p MadCap:conditions="Global.Primary:java" />
        <p MadCap:conditions="Global.Primary:cs" />
        <p MadCap:conditions="Global.Primary:vb" />
        <p>and change it to the new class PilotNew renaming field and changing package/namespace at the same time:</p>
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <pre class="prettyprint" xml:space="preserve">PilotNew.java
/**//* Copyright (C) 2004 - 2007 Versant Inc. http://www.db4o.com */

package com.db4odoc.refactoring;

public class PilotNew  {
  private String identity;

  private int points;

  public PilotNew(String name, int points)  {
    this.identity = name;
    this.points = points;
  }

  public String getIdentity()  {
    return identity;
  }

  public String toString()  {
    return identity + "/" + points;
  }
}</pre>
        </p>
        <p MadCap:conditions="Global.Primary:java" />
        <p MadCap:conditions="Global.Primary:cs" />
        <p MadCap:conditions="Global.Primary:vb" />
        <p>First let's create a database and fill it with some values:</p>
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <pre class="prettyprint" xml:space="preserve">RefactoringExample.java: setObjects
private static void setObjects() {
    new File(DB4O_FILE_NAME).delete();
    ObjectContainer container = Db4o.openFile(DB4O_FILE_NAME);
    try  {
      Pilot pilot = new Pilot("Rubens Barrichello");
      container.store(pilot);
      pilot = new Pilot("Michael Schumacher");
      container.store(pilot);
    } finally  {
      container.close();
    }
  }</pre>
        </p>
        <p MadCap:conditions="Global.Primary:java" />
        <p MadCap:conditions="Global.Primary:cs" />
        <p MadCap:conditions="Global.Primary:vb" />
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <pre class="prettyprint" xml:space="preserve">RefactoringExample.java: checkDB
private static void checkDB() {
    ObjectContainer container = Db4o.openFile(DB4O_FILE_NAME);
    try  {
      ObjectSet result=container.queryByExample(new Object());
          listResult(result);
    } finally  {
      container.close();
    }
  }</pre>
        </p>
        <p MadCap:conditions="Global.Primary:java" />
        <p MadCap:conditions="Global.Primary:cs" />
        <p MadCap:conditions="Global.Primary:vb" />
        <p>We already have PilotNew class so we can go on with renaming:</p>
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <pre class="prettyprint" xml:space="preserve">RefactoringExample.java: changeClass
private static void changeClass() {
    Configuration configuration = Db4o.newConfiguration();
    configuration.objectClass(Pilot.class).rename("com.db4odoc.f1.refactoring.PilotNew");
    configuration.objectClass(PilotNew.class).objectField("name").rename("identity");
    ObjectContainer container = Db4o.openFile(configuration, DB4O_FILE_NAME);
    container.close();
  }</pre>
        </p>
        <p MadCap:conditions="Global.Primary:java" />
        <p MadCap:conditions="Global.Primary:cs" />
        <p MadCap:conditions="Global.Primary:vb" />
        <p>Now the data for the old Pilot class should be transferred to the new PilotNew class, and "name" field data should be stored in "identity" field.</p>
        <p>To make our check more complicated let's add some data for our new class:</p>
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <pre class="prettyprint" xml:space="preserve">RefactoringExample.java: setNewObjects
private static void setNewObjects() {
    ObjectContainer container = Db4o.openFile(DB4O_FILE_NAME);
    try  {
      PilotNew pilot = new PilotNew("Rubens Barrichello",99);
      container.store(pilot);
      pilot = new PilotNew("Michael Schumacher",100);
      container.store(pilot);
    } finally  {
      container.close();
    }
  }</pre>
        </p>
        <p MadCap:conditions="Global.Primary:java" />
        <p MadCap:conditions="Global.Primary:cs" />
        <p MadCap:conditions="Global.Primary:vb" />
        <p>We can check what is stored in the database now:</p>
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <pre class="prettyprint" xml:space="preserve">RefactoringExample.java: retrievePilotNew
private static void retrievePilotNew() {
    ObjectContainer container = Db4o.openFile(DB4O_FILE_NAME);
    try  {
      ObjectSet result = container.query(PilotNew.class);
      listResult(result);
    } finally  {
      container.close();
    }
  }</pre>
        </p>
        <p MadCap:conditions="Global.Primary:java" />
        <p MadCap:conditions="Global.Primary:cs" />
        <p MadCap:conditions="Global.Primary:vb" />
        <p>There is one thing to remember. The rename feature is intended to rename a class from one name to the other. Internally this will rename the meta-information. If you will try to rename class to the name that is already stored in the database, the renaming will fail, because the name is reserved. In our example it will happen if setNewObjects method will be called before changeClass.
</p>
        <p MadCap:conditions="Primary.Online">Download example code:</p>
        <p MadCap:conditions="Primary.Online">
            <MadCap:conditionalText MadCap:conditions="Primary.Java"><a href="refactoringjava.zip">Java </a>
            </MadCap:conditionalText>
        </p>
        <script type="text/javascript" src="../../SkinSupport/MadCapBodyEnd.js">
        </script>
    </body>
</html>