<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="2" MadCap:lastHeight="120" MadCap:lastWidth="624" MadCap:disableMasterStylesheet="true" MadCap:tocPath="Implementation Strategies|Refactoring And Schema Evolution|Refactoring Class Hierarchy" MadCap:InPreviewMode="false" MadCap:RuntimeFileType="Topic" MadCap:TargetType="WebHelp" MadCap:PathToHelpSystem="../../../../" MadCap:HelpSystemFileName="index.xml" MadCap:SearchType="Stem">
    <head><title>Removing Class From A Hierarchy	</title>
        <script type="text/javascript">/* <![CDATA[ */
			window.onload = function(){
                             prettyPrint();
			};
                /* ]]> */</script>
        <link href="../../../SkinSupport/MadCap.css" rel="stylesheet" />
        <link href="../../../Resources/Stylesheets/OnlineStyle.css" rel="stylesheet" />
        <script src="../../../Resources/Code/prettify.js">
        </script>
        <script src="../../../Resources/Code/lang-vb.js">
        </script>
        <script src="../../../SkinSupport/MadCapAll.js" type="text/javascript">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink" style="display: none;"><a href="../../../../index_CSH.html#implementation_strategies/refactoring_and_schema_evolution/refactoring_class_hierarchy/removing_class_from_a_hierarchy.htm" style="">Open topic with navigation</a>
        </p>
        <div class="MCBreadcrumbsBox"><span class="MCBreadcrumbsPrefix">You are here: </span><a class="MCBreadcrumbsLink" href="../../../implementation_strategies.htm">Implementation Strategies</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="../../refactoring_and_schema_evolution.htm">Refactoring And Schema Evolution</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="../refactoring_class_hierarchy.htm">Refactoring Class Hierarchy</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">Removing Class From A Hierarchy</span>
        </div>
        <p>
            <script type="text/javascript">/*<![CDATA[*/document.write('<a href="' + location.href +'">');
				document.write("Direct Link");
			document.write('</a>');/*]]>*/</script>
        </p>
        <p>
        </p>
        <h1>Removing Class From A Hierarchy</h1>
        <p>
        </p>
        <p>Let's use <a href="a.htm">A</a>,<a href="b.htm">B</a> and <a href="c.htm">C</a> classes and remove B class,
copying its values to the updated C class. </p>
        <p>First of all let's store some class objects to the database:</p>
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <pre class="prettyprint" xml:space="preserve">refactoringExample.java: storeData
public static void storeData() {
    new File(DB4O_FILE_NAME).delete();
    ObjectContainer container = Db4o.openFile(DB4O_FILE_NAME);
    try  {
      A a = new A();
      a.name = "A class";
      container.store(a);
      
      B b = new B();
      b.name = "B class";
      b.number = 1;
      container.store(b);
      
      C c = new C();
      c.name = "C class";
      c.number = 2;
      container.store(c);
    } finally  {
      container.close();
    }
  }</pre>
            <pre class="prettyprint" xml:space="preserve">RefactoringExample.java: readData
public static void readData() {
    ObjectContainer container = Db4o.openFile(DB4O_FILE_NAME);
    try  {
      ObjectSet result = container.queryByExample(new D());
      System.out.println();
      System.out.println("D class: ");
      listResult(result);
    } finally  {
      container.close();
    }
  }</pre>
        </p>
        <p MadCap:conditions="Global.Primary:java" />
        <p MadCap:conditions="Global.Primary:cs" />
        <p MadCap:conditions="Global.Primary:vb" />
        <p>If we will remove B class and update C class to inherit from
A, we won't be able to read C data from the database anymore (exception).  In order to preserve C data we will need to
transfer it to another class:</p>
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <pre class="prettyprint" xml:space="preserve">D.java
/**//* Copyright (C) 2007  Versant Inc.  http://www.db4o.com */
package com.db4odoc.refactoring.refactored;

import com.db4odoc.refactoring.initial.A;

public class D extends A  {
  public int number;

  public String toString() {
    return name + "/" + number;
  }
}</pre>
        </p>
        <p MadCap:conditions="Global.Primary:java" />
        <p MadCap:conditions="Global.Primary:cs" />
        <p MadCap:conditions="Global.Primary:vb" />
        <p>We can also transfer B data into this class.</p>
        <p>Once D class is created we can run the data transfer:</p>
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <pre class="prettyprint" xml:space="preserve">refactoringUtil.java: moveValues
public static void moveValues() {
    ObjectContainer container = Db4o.openFile(DB4O_FILE_NAME);
    try  {
      // querying for B will bring back B and C values
      ObjectSet result = container.queryByExample(new B());
      while (result.hasNext()) {
        B b = (B)result.next();
        D d = new D();
        d.name = b.name;
        d.number = b.number;
        container.delete(b);
        container.store(d);
      }
      
    } finally  {
      container.close();
      System.out.println("Done");
    }
  }</pre>
        </p>
        <p MadCap:conditions="Global.Primary:java" />
        <p MadCap:conditions="Global.Primary:cs" />
        <p MadCap:conditions="Global.Primary:vb" />
        <p>Now B and C classes can be safely removed from the project
and all the references to them updated to D. We can check that all the values
are in place:</p>
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <pre class="prettyprint" xml:space="preserve">RefactoringExample.java: readData
public static void readData() {
    ObjectContainer container = Db4o.openFile(DB4O_FILE_NAME);
    try  {
      ObjectSet result = container.queryByExample(new D());
      System.out.println();
      System.out.println("D class: ");
      listResult(result);
    } finally  {
      container.close();
    }
  }</pre>
        </p>
        <p MadCap:conditions="Global.Primary:java" />
        <p MadCap:conditions="Global.Primary:cs" />
        <p MadCap:conditions="Global.Primary:vb" />
        <p>When performing refactoring on your working application do
not forget to make a copy of the code and data before making any changes!</p>
        <p MadCap:conditions="Primary.Online">Download example code:</p>
        <p MadCap:conditions="Primary.Online">
            <MadCap:conditionalText MadCap:conditions="Primary.Java"><a href="complexrefactoringjava.zip">Java(part 1) </a><a href="complexrefactoring2java.zip">Java(part 2) </a>
            </MadCap:conditionalText>
        </p>
        <script type="text/javascript" src="../../../SkinSupport/MadCapBodyEnd.js">
        </script>
    </body>
</html>