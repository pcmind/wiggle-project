<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="2" MadCap:lastHeight="120" MadCap:lastWidth="624" MadCap:disableMasterStylesheet="true" MadCap:tocPath="Implementation Strategies|Refactoring And Schema Evolution" MadCap:InPreviewMode="false" MadCap:RuntimeFileType="Topic" MadCap:TargetType="WebHelp" MadCap:PathToHelpSystem="../../../" MadCap:HelpSystemFileName="index.xml" MadCap:SearchType="Stem">
    <head><title>Field type change	</title>
        <script type="text/javascript">/* <![CDATA[ */
			window.onload = function(){
                             prettyPrint();
			};
                /* ]]> */</script>
        <link href="../../SkinSupport/MadCap.css" rel="stylesheet" />
        <link href="../../Resources/Stylesheets/OnlineStyle.css" rel="stylesheet" />
        <script src="../../Resources/Code/prettify.js">
        </script>
        <script src="../../Resources/Code/lang-vb.js">
        </script>
        <script src="../../SkinSupport/MadCapAll.js" type="text/javascript">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink" style="display: none;"><a href="../../../index_CSH.html#implementation_strategies/refactoring_and_schema_evolution/field_type_change.htm" style="">Open topic with navigation</a>
        </p>
        <div class="MCBreadcrumbsBox"><span class="MCBreadcrumbsPrefix">You are here: </span><a class="MCBreadcrumbsLink" href="../../implementation_strategies.htm">Implementation Strategies</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="../refactoring_and_schema_evolution.htm">Refactoring And Schema Evolution</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">Field Type Change</span>
        </div>
        <p>
            <script type="text/javascript">/*<![CDATA[*/document.write('<a href="' + location.href +'">');
				document.write("Direct Link");
			document.write('</a>');/*]]>*/</script>
        </p>
        <p>
        </p>
        <h1>Field type change</h1>
        <p>The reviewed refactoring types are fairly easy. It gets more difficult when you need to change a field's type.</p>
        <p>If you modify a field's type, db4o internally creates a new field of the same name, but with the new type. The values of the old typed field are still present, but hidden. If you will change the type back to the old type the old values will still be there. </p>
        <p>You can access the values of the previous field data using StoredField API.</p>
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <p>Java:</p>
            <p><code> StoredClass#storedField(name, type) </code>
            </p>
        </p>
        <p MadCap:conditions="Global.Primary:java" />
        <p MadCap:conditions="Global.Primary:cs" />
        <p MadCap:conditions="Global.Primary:vb" />
        <p>gives you access to the field, which type was changed.</p>
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <p>Java: </p>
            <p><code>StoredField#get(Object)</code>
            </p>
        </p>
        <p MadCap:conditions="Global.Primary:java" />
        <p MadCap:conditions="Global.Primary:cs" />
        <p MadCap:conditions="Global.Primary:vb" />
        <p>allows you to get the old field value for the specified object.</p>
        <p>To see how it works on example, let's change Pilot's field name from type string to type Identity:</p>
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <pre class="prettyprint" xml:space="preserve">Identity.java
/**//* Copyright (C) 2004 - 2007 Versant Inc. http://www.db4o.com */

package com.db4odoc.refactoring.newclasses;

public class Identity  {
  private String name;

  private String id;

  public Identity(String name, String id)  {
    this.name = name;
    this.id = id;
  }

  public void setName(String name)  {
    this.name = name;
  }

  public void setId(String id)  {
    this.id = id;
  }

  public String toString()  {
    return name + "[" + id + "]";
  }

}</pre>
        </p>
        <p MadCap:conditions="Global.Primary:java" />
        <p MadCap:conditions="Global.Primary:cs" />
        <p MadCap:conditions="Global.Primary:vb" />
        <p>Now to access old "name" values and transfer them to the new "name" we can use the following procedure:</p>
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <pre class="prettyprint" xml:space="preserve">RefactoringExample.java: transferValues
private static void transferValues() {
    ObjectContainer container = Db4o.openFile(DB4O_FILE_NAME);
    try  {
      StoredClass sc = container.ext().storedClass(
"com.db4odoc.f1.refactoring.oldclasses.Pilot");
      System.out.println("Stored class:  "+ sc.toString());
      StoredField sfOld = sc.storedField("name",String.class);
      System.out.println("Old field:  "+ sfOld.toString()+";"+
sfOld.getStoredType());
      Query q = container.query();
      q.constrain(Pilot.class);
      ObjectSet result = q.execute();
      for (int i = 0; i&lt; result.size(); i++) {
        Pilot pilot = (Pilot)result.queryByExample(i);
        System.out.println("Pilot="+ pilot);
        pilot.setName(new Identity(sfOld.queryByExample(pilot).toString(),""));
        System.out.println("Pilot="+ pilot);
        container.store(pilot);
      }
      
    } finally  {
      container.close();
    }
  }</pre>
        </p>
        <p MadCap:conditions="Global.Primary:java" />
        <p MadCap:conditions="Global.Primary:cs" />
        <p>
            <pre class="prettyprint lang-vb" xml:space="preserve">RefactoringExample.vb: TransferValues
Private Shared Sub TransferValues()
            Dim container As IObjectContainer = Db4oFactory.OpenFile(Db4oFileName)
            Try
                Dim sc As IStoredClass = container.Ext().StoredClass(GetType(Pilot))
                System.Console.WriteLine("Stored class:  " + sc.GetName())
                Dim sfOld As IStoredField = sc.StoredField("_name", GetType(String))
                System.Console.WriteLine("Old field:  " + _ 
sfOld.GetName() + ";" + sfOld.GetStoredType().GetName())
                Dim q As IQuery = container.Query()
                q.Constrain(GetType(Pilot))
                Dim result As IObjectSet = q.Execute()
                Dim obj As Object
                For Each obj In result
                    Dim pilot As Pilot = CType(obj, Pilot)
                    pilot.Name = New Identity(sfOld.QueryByExample(pilot).ToString(), "")
                    System.Console.WriteLine("Pilot=" + pilot.ToString())
                    container.Store(pilot)
                Next
            Finally
                container.Close()
            End Try
        End Sub</pre>
            <p>
            </p>
            <p MadCap:conditions="Global.Primary:vb" />
        </p>
        <p>These are the basic refactoring types, which can help with any changes you will need to make. </p>
        <p MadCap:conditions="Primary.Online">Download example code:</p>
        <p MadCap:conditions="Primary.Online">
            <MadCap:conditionalText MadCap:conditions="Primary.Java"><a href="refactoringjava.zip">Java </a>
            </MadCap:conditionalText>
        </p>
        <script type="text/javascript" src="../../SkinSupport/MadCapBodyEnd.js">
        </script>
    </body>
</html>