<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="2" MadCap:lastHeight="120" MadCap:lastWidth="624" MadCap:disableMasterStylesheet="true" MadCap:tocPath="Implementation Strategies|Freespace Management System" MadCap:InPreviewMode="false" MadCap:RuntimeFileType="Topic" MadCap:TargetType="WebHelp" MadCap:PathToHelpSystem="../../../" MadCap:HelpSystemFileName="index.xml" MadCap:SearchType="Stem">
    <head><title>Two Freespace Systems	</title>
        <script type="text/javascript">/* <![CDATA[ */
			window.onload = function(){
                             prettyPrint();
			};
                /* ]]> */</script>
        <link href="../../SkinSupport/MadCap.css" rel="stylesheet" />
        <link href="../../Resources/Stylesheets/OnlineStyle.css" rel="stylesheet" />
        <script src="../../SkinSupport/MadCapAll.js">
        </script>
        <script src="../../Resources/Code/prettify.js">
        </script>
        <script src="../../Resources/Code/lang-vb.js">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink" style="display: none;"><a href="../../../index_CSH.html#implementation_strategies/freespace_management_system/two_freespace_systems.htm" style="">Open topic with navigation</a>
        </p>
        <div class="MCBreadcrumbsBox"><span class="MCBreadcrumbsPrefix">You are here: </span><a class="MCBreadcrumbsLink" href="../../implementation_strategies.htm">Implementation Strategies</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="../freespace_management_system.htm">Freespace Management System</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">Two Freespace Systems</span>
        </div>
        <p>
            <script type="text/javascript">/*<![CDATA[*/document.write('<a href="' + location.href +'">');
				document.write("Direct Link");
			document.write('</a>');/*]]>*/</script>
        </p>
        <p>
        </p>
        <h1>Two Freespace Systems</h1>
        <p>db4o comes with three freespace systems:</p>
        <ul>
            <li value="1">RAM-based: the information about freespace is held in RAM;</li>
            <li value="2">b-Tree-based: the information about freespace is written to disk, b-Trees are used to manage this information; </li>
            <li value="3">index-based: similar to b-Trees, but existing index functionality to store freespace information. </li>
        </ul>
        <p>You can configure db4o to use either of these by calling</p>
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <p>Java: <code>configuration.freespace().useRamSystem()</code></p>
        </p>
        <p MadCap:conditions="Global.Primary:java" />
        <p MadCap:conditions="Global.Primary:net" />
        <p>or</p>
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <p>Java: <code>configuration.freespace().useBTreeSystem() </code></p>
        </p>
        <p MadCap:conditions="Global.Primary:java" />
        <p MadCap:conditions="Global.Primary:net" />
        <p>or</p>
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <p>Java: <code>configuration.freespace().useIndexSystem() </code></p>
        </p>
        <p MadCap:conditions="Global.Primary:java" />
        <p MadCap:conditions="Global.Primary:net" />
        <p>This call should be made before you open the database for the first time</p>
        <p>By default db4o uses <b>RAM freespace management system</b>. The information about free slots is loaded into memory on opening a database file and discarded on closing it. This system is quite fast, but it has its downside:</p>
        <ol>
            <li value="1">Higher RAM usage during operation.</li>
            <li value="2">Loss of freespace upon abnormal termination. That is done for security reasons and freespace can be reclaimed using defragmentation.</li>
        </ol>
        <p>RAM-based freespace management is a good performance solution, but it can be insufficient for the systems with limited RAM resources and high probability of abnormal system termination (power failure on mobile devices).</p>
        <p>In order to meet the requirements of such environments you can use new <b>b-Tree-based freespace management system</b>. It solves the problems of RAM-based system:</p>
        <ol>
            <li value="1">RAM usage is kept at the minimum.</li>
            <li value="2">No freespace is lost on abnormal system termination (database file won't grow unnecessarily).</li>
        </ol>
        <p>How it works?:
</p>
        <ul>
            <li value="1">The system uses b-Trees to keep information about available freespace</li>
            <li value="2">b-Trees operate against the file, and only uses memory for caching</li>
            <li value="3">For every new write to the database file the system tries to find a freed slot, which is at least the size needed or greater, traversing freespace index</li>
            <li value="4">When an object is updated or deleted, its 'old' slot is added to the freespace b-Tree entry </li>
            <li value="5">This b-Tree system is <span class="MCPopup"><a href="javascript:void(0);" class="MCPopupSpot" onclick="FMCPopup( event, this ); return false;" MadCap:src="../../Basic_Concepts/acid_model.htm">ACID<img style="border: none;margin-left: 5px;" src="../../SkinSupport/ExpandingClosed.gif" MadCap:altsrc="../../SkinSupport/ExpandingOpen.gif" class="MCExpandingIcon" onload="if ( typeof( FMCPreloadImage ) == 'function' ) { FMCPreloadImage( '../../SkinSupport/ExpandingOpen.gif' ); }" /></a></span> (no information is lost upon abnormal system termination)</li>
        </ul>
        <p>b-Tree-based freespace system can show poorer performance compared to RAM-based system, as it needs to access the file to write updated freespace information.  </p>
        <p>However, b-Tree-based freespace system is fast enough, especially for mobile devices, where file access is not much slower than RAM-access, and ACID transactions together with low memory consumption are most valuable factors.</p>
        <p>Index-based freespace system has similar to b-Tree characteristics, but poorer performance and is used for legacy reasons. </p>
        <script type="text/javascript" src="../../SkinSupport/MadCapBodyEnd.js">
        </script>
    </body>
</html>