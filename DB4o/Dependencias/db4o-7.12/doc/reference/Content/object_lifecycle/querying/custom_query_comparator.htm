<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="2" MadCap:lastHeight="120" MadCap:lastWidth="624" MadCap:disableMasterStylesheet="true" MadCap:tocPath="Object Lifecycle|Querying" MadCap:InPreviewMode="false" MadCap:RuntimeFileType="Topic" MadCap:TargetType="WebHelp" MadCap:PathToHelpSystem="../../../" MadCap:HelpSystemFileName="index.xml" MadCap:SearchType="Stem">
    <head><title>Custom Query Comparator	</title>
        <script type="text/javascript">/* <![CDATA[ */
			window.onload = function(){
                             prettyPrint();
			};
                /* ]]> */</script>
        <link href="../../SkinSupport/MadCap.css" rel="stylesheet" />
        <link href="../../Resources/Stylesheets/OnlineStyle.css" rel="stylesheet" />
        <script src="../../Resources/Code/prettify.js">
        </script>
        <script src="../../Resources/Code/lang-vb.js">
        </script>
        <script src="../../SkinSupport/MadCapAll.js" type="text/javascript">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink" style="display: none;"><a href="../../../index_CSH.html#object_lifecycle/querying/custom_query_comparator.htm" style="">Open topic with navigation</a>
        </p>
        <div class="MCBreadcrumbsBox"><span class="MCBreadcrumbsPrefix">You are here: </span><a class="MCBreadcrumbsLink" href="../../object_lifecycle.htm">Object Lifecycle</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="../querying.htm">Querying</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">Custom Query Comparator</span>
        </div>
        <p>
            <script type="text/javascript">/*<![CDATA[*/document.write('<a href="' + location.href +'">');
				document.write("Direct Link");
			document.write('</a>');/*]]>*/</script>
        </p>
        <p>
        </p>
        <h1>Custom Query Comparator</h1>
        <p><a name="kanchor33"></a>Db4o allows using a custom comparator for query processing.
This can be useful for replacing the standard way of selecting query results,
for example, when a non-standard attribute type should be compared as string or
integer</p>
        <p>The usage is best shown on an example. </p>
        <p>Let's create a custom class containing string information:</p>
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <pre class="prettyprint" xml:space="preserve">MyString.java
/** Copyright (C) 2007 Versant Inc. http://www.db4o.com */
package com.db4odoc.comparing;

class MyString  {

  private String _string;

  public MyString(String string)  {
    _string = string;
  }

  public String toString()  {
    return _string;
  }
}
        </pre>
        </p>
        <p MadCap:conditions="Global.Primary:java" />
        <p MadCap:conditions="Global.Primary:cs" />
        <p MadCap:conditions="Global.Primary:vb" />
        <p>MyString class will be used for an attribute in the
following class:</p>
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <pre class="prettyprint" xml:space="preserve">Record.java
/** Copyright (C) 2007 Versant Inc. http://www.db4o.com */
package com.db4odoc.comparing;

public class Record  {
  private MyString _record;
  
  
  public Record(String record)  {
    _record = new MyString(record);
  }
  
  public String toString() {
    return _record.toString();
  }
}</pre>
        </p>
        <p MadCap:conditions="Global.Primary:java" />
        <p MadCap:conditions="Global.Primary:cs" />
        <p MadCap:conditions="Global.Primary:vb" />
        <p>Let's save some Record objects to the database:</p>
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <pre class="prettyprint" xml:space="preserve">CompareExample.java: storeRecords
private static void storeRecords(Configuration configuration) {
    new File(FILENAME).delete();
    ObjectContainer container = Db4o.openFile(configuration, FILENAME);
    try  {
      Record record = new Record("Michael Schumacher, points: 100");
      container.store(record);
      record = new Record("Rubens Barrichello, points: 98");
      container.store(record);
      record = new Record("Kimi Raikonnen, points: 55");
      container.store(record);
    } finally  {
      container.close();
    }
  }</pre>
        </p>
        <p MadCap:conditions="Global.Primary:java" />
        <p MadCap:conditions="Global.Primary:cs" />
        <p MadCap:conditions="Global.Primary:vb" />
        <p>Selecting the query results, we need to compare string
values contained in MyString objects. This can be configured with the following
setting:</p>
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <pre class="prettyprint" xml:space="preserve">CompareExample.java: configure
private static Configuration configure() {
    Configuration configuration = Db4o.newConfiguration();
    configuration.objectClass(MyString.class).compare(new ObjectAttribute()  {
            public Object attribute(Object original)  {
                if (original instanceof MyString)  {
                    return ((MyString) original).toString();
                }
                return original;
            }
        });
    return configuration;
  }</pre>
        </p>
        <p MadCap:conditions="Global.Primary:java" />
        <p MadCap:conditions="Global.Primary:cs" />
        <p MadCap:conditions="Global.Primary:vb" />
        <p>This piece of code registers an attribute provider for
special query behavior. </p>
        <p>The query processor will compare the
object returned by the attribute provider instead of the actual object, both
for the constraint and the candidate persistent object.</p>
        <p>The querying code will look like this:</p>
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <pre class="prettyprint" xml:space="preserve">CompareExample.java: checkRecords
private static void checkRecords(Configuration configuration) {
    ObjectContainer container = Db4o.openFile(configuration, FILENAME);
    try  {
      Query q = container.query();
      q.constrain(new Record("Rubens"));
          q.descend("_record").constraints().contains();
      ObjectSet result = q.execute();
      listResult(result);
    } finally  {
      container.close();
    }
  }</pre>
        </p>
        <p MadCap:conditions="Global.Primary:java" />
        <p MadCap:conditions="Global.Primary:cs" />
        <p MadCap:conditions="Global.Primary:vb" />
        <p>Using query comparator feature we can change the standard
way of selecting query results. This can be helpful for:</p>
        <ul>
            <li value="1">querying user types using simple string or numeric
representation</li>
            <li value="2">encapsulating additional logic into querying algorithm.</li>
        </ul>
        <script type="text/javascript" src="../../SkinSupport/MadCapBodyEnd.js">
        </script>
    </body>
</html>