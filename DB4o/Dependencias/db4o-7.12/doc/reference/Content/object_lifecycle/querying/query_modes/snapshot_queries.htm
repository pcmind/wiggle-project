<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="2" MadCap:lastHeight="120" MadCap:lastWidth="624" MadCap:disableMasterStylesheet="true" MadCap:tocPath="Object Lifecycle|Querying|Query Modes" MadCap:InPreviewMode="false" MadCap:RuntimeFileType="Topic" MadCap:TargetType="WebHelp" MadCap:PathToHelpSystem="../../../../" MadCap:HelpSystemFileName="index.xml" MadCap:SearchType="Stem">
    <head><title>Snapshot Queries	</title>
        <script type="text/javascript">/* <![CDATA[ */
			window.onload = function(){
                             prettyPrint();
			};
                /* ]]> */</script>
        <link href="../../../SkinSupport/MadCap.css" rel="stylesheet" />
        <link href="../../../Resources/Stylesheets/OnlineStyle.css" rel="stylesheet" />
        <script src="../../../SkinSupport/MadCapAll.js">
        </script>
        <script src="../../../Resources/Code/prettify.js">
        </script>
        <script src="../../../Resources/Code/lang-vb.js">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink" style="display: none;"><a href="../../../../index_CSH.html#object_lifecycle/querying/query_modes/snapshot_queries.htm" style="">Open topic with navigation</a>
        </p>
        <div class="MCBreadcrumbsBox"><span class="MCBreadcrumbsPrefix">You are here: </span><a class="MCBreadcrumbsLink" href="../../../object_lifecycle.htm">Object Lifecycle</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="../../querying.htm">Querying</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="../query_modes.htm">Query Modes</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">Snapshot Queries</span>
        </div>
        <p>
            <script type="text/javascript">/*<![CDATA[*/document.write('<a href="' + location.href +'">');
				document.write("Direct Link");
			document.write('</a>');/*]]>*/</script>
        </p>
        <p>
        </p>
        <h1><a name="kanchor32"></a>Snapshot Queries</h1>
        <P>Snapshot mode allows you to get the advantages of the Lazy queries avoiding their side effects. When query is executed, the query processor chooses the best indexes, does all index processing and creates a snapshot of the index at this point in time. Non-indexed constraints are evaluated lazily when the application iterates through the <CODE>ObjectSet</CODE> resultset of the query.</P>
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <pre class="prettyprint" xml:space="preserve">QueryModesExample.java: testSnapshotQueries
private static void testSnapshotQueries()  {
    System.out.println(
"Testing query performance on 10000 pilot objects in Snapshot mode");
    fillUpDB(10000);
    Configuration configuration = Db4o.newConfiguration();
    configuration.queries().evaluationMode(QueryEvaluationMode.SNAPSHOT);
    ObjectContainer container = Db4o.openFile(configuration, DB4O_FILE_NAME);
    try  {
      QueryStats stats = new QueryStats();
      stats.connect(container);
      Query query = container.query();
      query.constrain(Pilot.class);
      query.descend("points").constrain(99).greater();
      query.execute();
      long executionTime = stats.executionTime();
      System.out.println("Query execution time: "
          + executionTime);
    } finally  {
      container.close();
    }
  }</pre>
        </p>
        <p MadCap:conditions="Global.Primary:java" />
        <p MadCap:conditions="Global.Primary:cs" />
        <p MadCap:conditions="Global.Primary:vb" />
        <P>Snapshot queries ensure better performance than Immediate queries, but the performance will depend on the size of the resultset.</P>
        <P>As the snapshot of the results is kept in memory the result set is not affected by the changes from the caller or from another transaction (compare the results of this code snippet to the one from <a href="lazy_queries.htm">Lazy Queries</a> topic):</P>
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <pre class="prettyprint" xml:space="preserve">QueryModesExample.java: testSnapshotConcurrent
private static void testSnapshotConcurrent()  {
    System.out
        .println("Testing snapshot mode with concurrent modifications");
    fillUpDB(10);
    Configuration configuration = Db4o.newConfiguration();
    configuration.queries().evaluationMode(QueryEvaluationMode.SNAPSHOT);
    ObjectContainer container = Db4o.openFile(configuration, DB4O_FILE_NAME);
    try  {
      Query query1 = container.query();
      query1.constrain(Pilot.class);
      query1.descend("points").constrain(5).smaller();
      ObjectSet result1 = query1.execute();

      Query query2 = container.query();
      query2.constrain(Pilot.class);
      query2.descend("points").constrain(1);
      ObjectSet result2 = query2.execute();
      Pilot pilotToDelete = (Pilot) result2.queryByExample(0);
      System.out.println("Pilot to be deleted: "
          + pilotToDelete);
      container.delete(pilotToDelete);
      Pilot pilot = new Pilot("Tester", 2);
      System.out.println("Pilot to be added: " + pilot);
      container.store(pilot);

      System.out
          .println("Query result after changing from the same transaction");
      listResult(result1);
    } finally  {
      container.close();
    }
  }</pre>
        </p>
        <p MadCap:conditions="Global.Primary:java" />
        <p MadCap:conditions="Global.Primary:cs" />
        <p MadCap:conditions="Global.Primary:vb" /><a name="Pros and Cons for Snapshot Queries"></a>
        <H2>Pros and Cons for Snapshot Queries</H2>
        <P>Pros:</P>
        <UL>
            <LI value="1">Index processing will happen without possible side effects from changes made by the caller or by other transaction.</LI>
            <LI value="2">Since index processing is fast, a server will not be blocked for a long time.</LI>
        </UL>
        <P>Cons:</P>
        <UL>
            <LI value="1">The entire candidate index will be loaded into memory. It will stay there until the query ObjectSet is garbage collected. In a <span class="MCPopup"><a href="javascript:void(0);" class="MCPopupSpot" onclick="FMCPopup( event, this ); return false;" MadCap:src="../../../client-server.htm">C/S<img style="border: none;margin-left: 5px;" src="../../../SkinSupport/ExpandingClosed.gif" MadCap:altsrc="../../../SkinSupport/ExpandingOpen.gif" class="MCExpandingIcon" onload="if ( typeof( FMCPreloadImage ) == 'function' ) { FMCPreloadImage( '../../../SkinSupport/ExpandingOpen.gif' ); }" /></a></span> setup, the memory will be used on the server side</LI>
        </UL>
        <P>Client/Server applications with the risk of concurrent modifications should prefer Snapshot mode to avoid side effects from other transactions.</P>
        <script type="text/javascript" src="../../../SkinSupport/MadCapBodyEnd.js">
        </script>
    </body>
</html>