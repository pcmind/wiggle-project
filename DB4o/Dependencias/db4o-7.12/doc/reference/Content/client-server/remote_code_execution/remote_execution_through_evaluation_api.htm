<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="2" MadCap:lastHeight="120" MadCap:lastWidth="624" MadCap:disableMasterStylesheet="true" MadCap:tocPath="Client-Server|Remote Code Execution" MadCap:InPreviewMode="false" MadCap:RuntimeFileType="Topic" MadCap:TargetType="WebHelp" MadCap:PathToHelpSystem="../../../" MadCap:HelpSystemFileName="index.xml" MadCap:SearchType="Stem">
    <head><title>Remote Execution Through Evaluation API	</title>
        <script type="text/javascript">/* <![CDATA[ */
			window.onload = function(){
                             prettyPrint();
			};
                /* ]]> */</script>
        <link href="../../SkinSupport/MadCap.css" rel="stylesheet" />
        <link href="../../Resources/Stylesheets/OnlineStyle.css" rel="stylesheet" />
        <script src="../../Resources/Code/prettify.js">
        </script>
        <script src="../../Resources/Code/lang-vb.js">
        </script>
        <script src="../../SkinSupport/MadCapAll.js" type="text/javascript">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink" style="display: none;"><a href="../../../index_CSH.html#client-server/remote_code_execution/remote_execution_through_evaluation_api.htm" style="">Open topic with navigation</a>
        </p>
        <div class="MCBreadcrumbsBox"><span class="MCBreadcrumbsPrefix">You are here: </span><a class="MCBreadcrumbsLink" href="../../client-server.htm">Client-Server</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="../remote_code_execution.htm">Remote Code Execution</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">Remote Execution Through Evaluation API</span>
        </div>
        <p>
            <script type="text/javascript">/*<![CDATA[*/document.write('<a href="' + location.href +'">');
				document.write("Direct Link");
			document.write('</a>');/*]]>*/</script>
        </p>
        <p>
        </p>
        <h1>Remote Execution Through Evaluation API</h1>
        <p>One of the ways to do that is using evaluation API. Evaluation/candidate classes are serialized and sent to the server. That means that if we will put the selection criteria and update code inside evaluation class, we will have that code on the server and executing a query using evaluation on the client side will run the update code on the server side.</p>
        <p>For easier query execution we can use database singleton - a class that have only one instance saved in the database. That actually can be the class calling the query itself.</p>
        <p>Let's fill up our server database:</p>
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <pre class="prettyprint" xml:space="preserve">RemoteExample.java: setObjects
private static void setObjects()  {
    new File(DB4O_FILE_NAME).delete();
    ObjectContainer container = Db4o.openFile(DB4O_FILE_NAME);
    try  {
      for (int i = 0; i &lt; 5; i++)  {
        Car car = new Car("car" + i);
        container.store(car);
      }
      container.store(new RemoteExample());
    } finally  {
      container.close();
    }
    checkCars();
  }</pre>
        </p>
        <p MadCap:conditions="Global.Primary:java" />
        <p MadCap:conditions="Global.Primary:cs" />
        <p MadCap:conditions="Global.Primary:vb" />
        <p>Now we can update the cars using specially designed singleton:</p>
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <pre class="prettyprint" xml:space="preserve">RemoteExample.java: updateCars
private static void updateCars()  {
    // triggering mass updates with a singleton
    // complete server-side execution
    Configuration configuration = Db4o.newConfiguration();
    configuration.messageLevel(0);
    ObjectServer server = Db4o.openServer(configuration, DB4O_FILE_NAME, 0);
    try  {
      ObjectContainer client = server.openClient();
      Query q = client.query();
      q.constrain(RemoteExample.class);
      q.constrain(new Evaluation()  {
        public void evaluate(Candidate candidate)  {
          // evaluate method is executed on the server
          // use it to run update code
          ObjectContainer objectContainer = candidate
              .objectContainer();
          Query q2 = objectContainer.query();
          q2.constrain(Car.class);
          ObjectSet objectSet = q2.execute();
          while (objectSet.hasNext())  {
            Car car = (Car) objectSet.next();
            car.setModel("Update1-" + car.getModel());
            objectContainer.store(car);
          }
          objectContainer.commit();
        }
      });
      q.execute();
      client.close();
    } finally  {
      server.close();
    }
    checkCars();
  }</pre>
        </p>
        <p MadCap:conditions="Global.Primary:java" />
        <p MadCap:conditions="Global.Primary:cs" />
        <p MadCap:conditions="Global.Primary:vb" />
        <p>This method has its pros and cons.</p>
        <p>Pros:</p>
        <ul>
            <li value="1">any arbitrary code can be executed;</li>
            <li value="2">the code is executed on the server side;</li>
        </ul>
        <p>Cons:</p>
        <ul>
            <li value="1">the code will have to be serialized and sent over a network connection;</li>
            <li value="2">changing the code will require update of all clients</li>
        </ul>
        <p MadCap:conditions="Primary.Online">Download example code:</p>
        <p MadCap:conditions="Primary.Online">
            <MadCap:conditionalText MadCap:conditions="Primary.Java"><a href="remote_code_executionremotejava.zip">Java</a>
            </MadCap:conditionalText>
        </p>
        <script type="text/javascript" src="../../SkinSupport/MadCapBodyEnd.js">
        </script>
    </body>
</html>