<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="2" MadCap:lastHeight="120" MadCap:lastWidth="624" MadCap:disableMasterStylesheet="true" MadCap:tocPath="Tuning" MadCap:InPreviewMode="false" MadCap:RuntimeFileType="Topic" MadCap:TargetType="WebHelp" MadCap:PathToHelpSystem="../../" MadCap:HelpSystemFileName="index.xml" MadCap:SearchType="Stem">
    <head><title>Indexing	</title>
        <script type="text/javascript">/* <![CDATA[ */
			window.onload = function(){
                             prettyPrint();
			};
                /* ]]> */</script>
        <link href="../SkinSupport/MadCap.css" rel="stylesheet" />
        <link href="../Resources/Stylesheets/OnlineStyle.css" rel="stylesheet" />
        <script src="../Resources/Code/prettify.js">
        </script>
        <script src="../Resources/Code/lang-vb.js">
        </script>
        <script src="../SkinSupport/MadCapAll.js" type="text/javascript">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink" style="display: none;"><a href="../../index_CSH.html#tuning/indexing.htm" style="">Open topic with navigation</a>
        </p>
        <div class="MCBreadcrumbsBox"><span class="MCBreadcrumbsPrefix">You are here: </span><a class="MCBreadcrumbsLink" href="../tuning.htm">Tuning</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">Indexing</span>
        </div>
        <p>
            <script type="text/javascript">/*<![CDATA[*/document.write('<a href="' + location.href +'">');
				document.write("Direct Link");
			document.write('</a>');/*]]>*/</script>
        </p>
        <p>
        </p>
        <h1><a name="kanchor135"></a><a name="kanchor136"></a>Indexing</h1>
        <p>db4o allows to index fields to provide maximum querying performance. To request an index to be created, you would issue the following API method call in your global <a href="configuration.htm">db4o configuration method</a> before you open an ObjectContainer/ObjectServer:</p>
        <p>// assuming</p>
        <p><code>class Foo{      String bar; }</code>
        </p>
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <p>Java: </p>
            <p><code>configuration.objectClass(Foo.class).objectField("bar").indexed(true); </code>
            </p>
        </p>
        <p MadCap:conditions="Global.Primary:java" />
        <p MadCap:conditions="Global.Primary:net" />
        <p>If the configuration is set in this way, an index on the Foo#bar field will be created (if not present already) the next time you open an ObjectContainer/ObjectServer and you use the Foo class the first time in your applcation. </p>
        <p>Contrary to all other <a href="configuration.htm">configuration calls</a> indexes - once created - will remain in a database even if the index configuration call is not issued before opening an ObjectContainer/ObjectServer. </p>
        <p>To drop an index you would also issue a configuration call in your db4o configuration method:</p>
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <p>Java: </p>
            <p><code>configuration.objectClass(Foo.class).objectField("bar").indexed(false);</code>
            </p>
        </p>
        <p MadCap:conditions="Global.Primary:java" />
        <p MadCap:conditions="Global.Primary:net" />
        <p>Actually dropping the index will take place the next time the respective class is used.db4o will tell you when it creates and drops indexes, if you choose a message level of 1 or higher:</p>
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <p>Java: </p>
            <p><code>configuration.messageLevel(1);</code>
            </p>
        </p>
        <p MadCap:conditions="Global.Primary:java" />
        <p MadCap:conditions="Global.Primary:net" />
        <p>For creating and dropping indexes on large amounts of objects there are two possible strategies:</p>
        <ol>
            <li value="1">Import all objects with indexing off, configure the index and reopen the ObjectContainer/ObjectServer.</li>
            <li value="2">Import all objects with indexing turned on and commit regularly for a fixed amount of objects (~10,000).</li>
        </ol>
        <ol>
            <li value="1">will be faster.</li>
            <li value="2">will keep memory consumption lower.</li>
        </ol>
        <p>For more information see <a href="performance_hints/enable_field_indexes.htm">Enable Field Indexes</a> chapter.</p>
        <script type="text/javascript" src="../SkinSupport/MadCapBodyEnd.js">
        </script>
    </body>
</html>