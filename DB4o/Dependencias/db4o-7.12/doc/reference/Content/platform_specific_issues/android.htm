<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="2" MadCap:lastHeight="120" MadCap:lastWidth="624" MadCap:disableMasterStylesheet="true" MadCap:tocPath="Platform Specific Issues" MadCap:InPreviewMode="false" MadCap:RuntimeFileType="Topic" MadCap:TargetType="WebHelp" MadCap:PathToHelpSystem="../../" MadCap:HelpSystemFileName="index.xml" MadCap:SearchType="Stem">
    <head><title>Android	</title>
        <script type="text/javascript">/* <![CDATA[ */
			window.onload = function(){
                             prettyPrint();
			};
                /* ]]> */</script>
        <link href="../SkinSupport/MadCap.css" rel="stylesheet" />
        <link href="../Resources/Stylesheets/OnlineStyle.css" rel="stylesheet" />
        <script src="../Resources/Code/prettify.js">
        </script>
        <script src="../Resources/Code/lang-vb.js">
        </script>
        <script src="../SkinSupport/MadCapAll.js" type="text/javascript">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink" style="display: none;"><a href="../../index_CSH.html#platform_specific_issues/android.htm" style="">Open topic with navigation</a>
        </p>
        <div class="MCBreadcrumbsBox"><span class="MCBreadcrumbsPrefix">You are here: </span><a class="MCBreadcrumbsLink" href="../platform_specific_issues.htm">Platform Specific Issues</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">Android	</span>
        </div>
        <p>
            <script type="text/javascript">/*<![CDATA[*/document.write('<a href="' + location.href +'">');
				document.write("Direct Link");
			document.write('</a>');/*]]>*/</script>
        </p>
        <p>
        </p>
        <h1><a name="kanchor113"></a><a name="kanchor114"></a>Android</h1>
        <p><a href="http://code.google.com/android/index.htm">Android</a> is a new complete, open and free mobile platform. <a href="#" class="glossaryTerm_0">Android</a> offers developers a java based software developer kit with lots of helpful APIs, including geolocational services. Of course, there is a database support as well: Android has a built-in support for SQLite database. The basic API is similar to standard JDBC API, however some effort was added to create some convenience methods:<br /></p>
        <p><code>public int delete(String table, String whereClause, <br />String[] whereArgs)<br /></code>
        </p>
        <p><code>public long insert(String table, String nullColumnHack, <br /><a href="http://code.google.com/android/reference/android/content/ContentValues.htm">ContentValues</a> values)<br /></code>
        </p>
        <p><code>public <a href="http://code.google.com/android/reference/android/database/Cursor.htm">Cursor</a> query(boolean distinct, String table, String[] columns, String selection, String[] selectionArgs, <br />String groupBy, String having, String orderBy)<br /></code>
        </p>
        <p><code>public long replace(String table, String nullColumnHack, <br /><a href="http://code.google.com/android/reference/android/content/ContentValues.htm">ContentValues</a> initialValues)<br /></code>
        </p>
        <p>This may look better than SQL, but if you look closer you can see that all column names and selection criteria are specified as strings, so we still stay with a problem of run-time checking instead of compile-time. </p>
        <p>Luckily even for this very early Android release we already have an alternative - db4o. Yes, db4o runs on Android out of the box and produces very competitive results as well. The following application compares db4o and SQLite usage for basic operations. It also contains some operation duration calculations that can be used to compare db4o vs SQLite performance. Please, note that these results are for an overview purpose only and there are many configuration settings that can change performance of both databases. Also running in emulator does not guarantee the same results as in real device. <MadCap:conditionalText MadCap:conditions="Primary.Online">You can download the whole application code <a href="android/dbcomparerefjava.zip">here</a></MadCap:conditionalText>.</p>
        <p>More Reading:<ul><li value="1"><p><a href="android/general_info.htm">General Info</a></p></li><li value="2"><p><a href="android/application_structure.htm">Application Structure</a></p></li><li value="3"><p><a href="android/opening_a_database.htm">Opening A Database</a></p></li><li value="4"><p><a href="android/storing_data.htm">Storing Data</a></p></li><li value="5"><p><a href="android/retrieving_data.htm">Retrieving Data</a></p></li><li value="6"><p><a href="android/changing_data.htm">Changing Data</a></p></li><li value="7"><p><a href="android/deleting_data.htm">Deleting Data</a></p></li><li value="8"><p><a href="android/backup.htm">Backup</a></p></li><li value="9"><p><a href="android/closing_a_database.htm">Closing A Database</a></p></li><li value="10"><p><a href="android/schema_evolution.htm">Schema Evolution</a></p></li><li value="11"><p><a href="android/car.htm">Car</a></p></li><li value="12"><p><a href="android/pilot.htm">Pilot</a></p></li></ul></p><a name="Step by Step installation"></a>
        <h4>Step by Step installation</h4>
        <p>The steps to install db4o on Android are quite simple thanks to Eclipse.</p>
        <ol>
            <li value="1">Point your browser to <a href="http://developer.db4o.com/files/default.aspx">http://developer.db4o.com/files/default.aspx</a>. Here you have to choose stable, production or development release (I recommend the current production version) and then download the Java version of db4o.</li>
            <li value="2">Copy <b><i>db4o-xxx-java5.jar </i></b>available in the lib folder of your db4o installation to a lib folder in your Android project root directory.</li>
            <li value="3">Refresh the Eclipse project folders, click on lib, right-click on <b><i>db4o-xxx-java5.jar </i></b> and select "Add to build path".</li>
            <li value="4">You're done! You can now use db4o in your Android application and it will be deployed automatically when running the Android emulator.</li>
        </ol><a name="Things to remember when using db4o under Andoid"></a>
        <h4>Things to remember when using db4o under Andoid</h4>
        <ol>
            <li value="1">Use the Java 5 version of the db4o library available on the lib folder of your db4o installation (<b><i>db4o-xxx-java5.jar</i></b>). The other db4o Java versions can be less performant. </li>
            <li value="2">Open the database relative to your parent activity (context) data directory: Db4o.<i>openFile</i>(dbConfig(), db4oDBFullPath(context));<p><b>private</b> String db4oDBFullPath(Context ctx) {<br /></p><p><b>return</b> ctx.getDataDir() + "/" + "dbfile.yap";<br /></p><p>} <br />Otherwise Android security will prevent the creation of the database file.</p></li>
        </ol>
        <script type="text/javascript" src="../SkinSupport/MadCapBodyEnd.js">
        </script>
    </body>
</html>