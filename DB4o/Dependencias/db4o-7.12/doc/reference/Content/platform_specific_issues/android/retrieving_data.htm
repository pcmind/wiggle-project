<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="2" MadCap:lastHeight="120" MadCap:lastWidth="624" MadCap:disableMasterStylesheet="true" MadCap:tocPath="Platform Specific Issues|Android" MadCap:InPreviewMode="false" MadCap:RuntimeFileType="Topic" MadCap:TargetType="WebHelp" MadCap:PathToHelpSystem="../../../" MadCap:HelpSystemFileName="index.xml" MadCap:SearchType="Stem">
    <head><title>Retrieving Data	</title>
        <script type="text/javascript">/* <![CDATA[ */
			window.onload = function(){
                             prettyPrint();
			};
                /* ]]> */</script>
        <link href="../../SkinSupport/MadCap.css" rel="stylesheet" />
        <link href="../../Resources/Stylesheets/OnlineStyle.css" rel="stylesheet" />
        <script src="../../Resources/Code/prettify.js">
        </script>
        <script src="../../Resources/Code/lang-vb.js">
        </script>
        <script src="../../SkinSupport/MadCapAll.js" type="text/javascript">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink" style="display: none;"><a href="../../../index_CSH.html#platform_specific_issues/android/retrieving_data.htm" style="">Open topic with navigation</a>
        </p>
        <div class="MCBreadcrumbsBox"><span class="MCBreadcrumbsPrefix">You are here: </span><a class="MCBreadcrumbsLink" href="../../platform_specific_issues.htm">Platform Specific Issues</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="../android.htm">Android</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">Retrieving Data</span>
        </div>
        <p>
            <script type="text/javascript">/*<![CDATA[*/document.write('<a href="' + location.href +'">');
				document.write("Direct Link");
			document.write('</a>');/*]]>*/</script>
        </p>
        <p>
        </p>
        <h1>Retrieving Data</h1>
        <p>In order to test the retrieval abilities of both databases
we will try to select a car with a pilot having 9 points:</p>
        <p>SQLite:</p>
        <pre class="prettyprint" xml:space="preserve">SqlExample.java: selectCar
public static void selectCar()  {
      SQLiteDatabase db = database();
      if (db != null) {
        long startTime = System.currentTimeMillis();
            Cursor c =
                db.query("select c.model, p.name, " + 
"p.points from car c, pilot p where c.pilot = p.id and p.points = 9;", null);
            if (c.count() == 0)  {
              logToConsole(0, 
"Car not found, refill the database to continue.", false);
              return;
            }
            c.first();
            Pilot pilot = new Pilot();
            pilot.setName(c.getString(1));
            pilot.setPoints(c.getInt(2));
           
            Car car = new Car();
            car.setModel(c.getString(0));
            car.setPilot(pilot);
            logToConsole(startTime, "Selected Car (" + car + "): ", false);
      }
    }</pre>
        <p>db4o:</p>
        <p>(Using SODA query)</p>
        <pre class="prettyprint" xml:space="preserve">Db4oExample.java: selectCar
public static void selectCar()  {
      ObjectContainer container = database();
      if (container != null) {
      Query query = container.query();
      query.constrain(Car.class);
      query.descend("pilot").descend("points").constrain(new Integer(9));

      long startTime = System.currentTimeMillis();
      ObjectSet  result = query.execute();
      if (result.size() == 0) {
        logToConsole(0, "Car not found, refill the database to continue.", false);
      } else  {
        logToConsole(startTime, "Selected Car (" + result.next() + "): ", false);
      }
      }
    }</pre>
        <p>Of course SODA query is not the best db4o querying mechanism: the preferred mechanism  - Native Queries - will be reviewed in the following chapters. However, SODA is the closest to SQL and can server a good comparison. In the example above you can see that SQLite needs a lot of additional code to transfer the retrieved data into application's objects, whereas db4o does not need this code at all, as the result is already a collection of objects. </p>
        <p MadCap:conditions="Primary.Online">Download example code:</p>
        <p MadCap:conditions="Primary.Online">
            <MadCap:conditionalText MadCap:conditions="Primary.Java"><a href="dbcomparerefjava.zip">Java </a>
            </MadCap:conditionalText>
        </p>
        <script type="text/javascript" src="../../SkinSupport/MadCapBodyEnd.js">
        </script>
    </body>
</html>