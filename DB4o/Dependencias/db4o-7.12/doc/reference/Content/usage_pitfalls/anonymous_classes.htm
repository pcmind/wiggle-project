<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="2" MadCap:lastHeight="120" MadCap:lastWidth="624" MadCap:disableMasterStylesheet="true" MadCap:tocPath="Usage Pitfalls" MadCap:InPreviewMode="false" MadCap:RuntimeFileType="Topic" MadCap:TargetType="WebHelp" MadCap:PathToHelpSystem="../../" MadCap:HelpSystemFileName="index.xml" MadCap:SearchType="Stem">
    <head><title>Anonymous Classes	</title>
        <script type="text/javascript">/* <![CDATA[ */
			window.onload = function(){
                             prettyPrint();
			};
                /* ]]> */</script>
        <link href="../SkinSupport/MadCap.css" rel="stylesheet" />
        <link href="../Resources/Stylesheets/OnlineStyle.css" rel="stylesheet" />
        <script src="../SkinSupport/MadCapAll.js">
        </script>
        <script src="../Resources/Code/prettify.js">
        </script>
        <script src="../Resources/Code/lang-vb.js">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink" style="display: none;"><a href="../../index_CSH.html#usage_pitfalls/anonymous_classes.htm" style="">Open topic with navigation</a>
        </p>
        <div class="MCBreadcrumbsBox"><span class="MCBreadcrumbsPrefix">You are here: </span><a class="MCBreadcrumbsLink" href="../usage_pitfalls.htm">Usage Pitfalls</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">Anonymous Classes</span>
        </div>
        <p>
            <script type="text/javascript">/*<![CDATA[*/document.write('<a href="' + location.href +'">');
				document.write("Direct Link");
			document.write('</a>');/*]]>*/</script>
        </p>
        <p>
        </p>
        <h1>Anonymous Classes</h1>
        <p>Anonymous classes can be used to implement <span class="MCPopup"><a href="javascript:void(0);" class="MCPopupSpot" onclick="FMCPopup( event, this ); return false;" MadCap:src="../Basic_Concepts/native_query_concepts.htm">Native Query<img style="border: none;margin-left: 5px;" src="../SkinSupport/ExpandingClosed.gif" MadCap:altsrc="../SkinSupport/ExpandingOpen.gif" class="MCExpandingIcon" onload="if ( typeof( FMCPreloadImage ) == 'function' ) { FMCPreloadImage( '../SkinSupport/ExpandingOpen.gif' ); }" /></a></span>
predicates, Comparators and Evaluations. In this case it is important to
remember that in Client/server mode they will be marshalled to
"lightweight" transport db4o containers together with the graph of
referenced objects. The catch here is that in the bytecode anonymous classes
contain a reference to their parent class, meaning that the parent class will
be marshalled as well. Normally this is not an issue, but it can become a
problem if the parent class can't be instantiated without a constructor or when
callConstructors configuration setting is set to true.</p>
        <p>For example, for the following class:</p>
        <pre class="prettyprint" xml:space="preserve">ExceptionExample.java
package com.db4odoc.exceptionsonnotstorable;

import java.util.*;

import com.db4o.*;
import com.db4o.config.*;
import com.db4o.query.*;

public class ExceptionExample  {

  public static void main(String[] args)  {
    // TODO Auto-generated method stub
  }

  private final ObjectContainer _db;
  // more (non-persistable) state

  public ExceptionExample(String hostName, int port, String userName, String password)  {
    Configuration config = Db4o.newConfiguration();
    _db = Db4o.openClient(config, hostName, port, userName, password);
  }

  public List&lt;Item&gt; retrieveItems()  {
    ObjectSet&lt;Item&gt; result = _db.query(new Predicate&lt;Item&gt;()  {
      public boolean match(Item item)  {
        return true;
      }
    }, new Comparator&lt;Item&gt;()  {
      public int compare(Item one, Item two)  {
        return one.getName().compareTo(two.getName());
      }
    });
    return new ArrayList&lt;Item&gt;(result);
  }

}</pre>
        <p>The bytecode for the Predicate and the Comparator will produce
2 separate classes, holding a reference to ExceptionExample class:</p>
        <p><code>class
com.db4odoc.exceptionsonnotstorable.ExceptionExample$1 extends
com.db4o.query.Predicate {</code>
        </p>
        <p><code>  final synthetic
com.db4odoc.exceptionsonnotstorable.ExceptionExample this$0;</code>
        </p>
        <p><code>  ExceptionExample$1(com.db4odoc.exceptionsonnotstorable.ExceptionExample
arg0);</code>
        </p>
        <p><code>...</code>
        </p>
        <p><code>}</code>
        </p>
        <p><code>class
com.db4odoc.exceptionsonnotstorable.ExceptionExample$2 implements
java.util.Comparator {</code>
        </p>
        <p><code>  final synthetic
com.db4odoc.exceptionsonnotstorable.ExceptionExample this$0;</code>
        </p>
        <p><code> 
ExceptionExample$2(com.db4odoc.exceptionsonnotstorable.ExceptionExample
arg0);</code>
        </p>
        <p><code>...</code>
        </p>
        <p><code>}</code>
        </p>
        <p>The code above will fail if both exceptionsOnNotStorable and
callConstructors are set to true (in the default configuration callConstructors
is false). Note, that if ExceptionExample class were Storable - there would be
no issue either.</p>
        <p MadCap:conditions="Primary.Online">Download example code:</p>
        <p MadCap:conditions="Primary.Online">
            <MadCap:conditionalText MadCap:conditions="Primary.Java"><a href="exceptionsjava.zip">Java</a>
            </MadCap:conditionalText>
        </p>
        <script type="text/javascript" src="../SkinSupport/MadCapBodyEnd.js">
        </script>
    </body>
</html>