<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="2" MadCap:lastHeight="120" MadCap:lastWidth="624" MadCap:disableMasterStylesheet="true" MadCap:tocPath="Usage Pitfalls" MadCap:InPreviewMode="false" MadCap:RuntimeFileType="Topic" MadCap:TargetType="WebHelp" MadCap:PathToHelpSystem="../../" MadCap:HelpSystemFileName="index.xml" MadCap:SearchType="Stem">
    <head><title>Working With Large Amounts Of Data	</title>
        <script type="text/javascript">/* <![CDATA[ */
			window.onload = function(){
                             prettyPrint();
			};
                /* ]]> */</script>
        <link href="../SkinSupport/MadCap.css" rel="stylesheet" />
        <link href="../Resources/Stylesheets/OnlineStyle.css" rel="stylesheet" />
        <script src="../SkinSupport/MadCapAll.js">
        </script>
        <script src="../Resources/Code/prettify.js">
        </script>
        <script src="../Resources/Code/lang-vb.js">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink" style="display: none;"><a href="../../index_CSH.html#usage_pitfalls/working_with_large_amounts_of_data.htm" style="">Open topic with navigation</a>
        </p>
        <div class="MCBreadcrumbsBox"><span class="MCBreadcrumbsPrefix">You are here: </span><a class="MCBreadcrumbsLink" href="../usage_pitfalls.htm">Usage Pitfalls</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">Working With Large Amounts Of Data</span>
        </div>
        <p>
            <script type="text/javascript">/*<![CDATA[*/document.write('<a href="' + location.href +'">');
				document.write("Direct Link");
			document.write('</a>');/*]]>*/</script>
        </p>
        <p>
        </p>
        <h1>Working With Large Amounts Of Data</h1>
        <p>db4o is designed to manage large
amounts of data. The following paragraphs highlight some information
important for using db4o with large data.</p><a name="Size of Database Files"></a>
        <h2>Size of Database Files </h2>
        <p>In the default setting,
the maximum database file size is 2GB.   You can increase this
value by <a href="../tuning/performance_hints/increasing_the_maximum_database_file_size.htm">configuring the internal db4o block size</a>:
</p>
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <p>Java:</p>
            <p><code>configuration.blockSize(blockSize)</code>
            </p>
        </p>
        <p MadCap:conditions="Global.Primary:java" />
        <p MadCap:conditions="Global.Primary:net" />
        <p>As a parameter you can specify
any value between 1 and 127. The resulting maximum database file size
will be a multiple of 2GB. A recommended setting for large database
files is 8, since internal pointers have this length.   Using <code>blockSize</code> the maximum database file size will be
16GB.   The above method has to be called before an
Object Container is opened the first time. During the lifetime of an
Object Container the setting will have to stay the same. Since
<span class="MCPopup"><a href="javascript:void(0);" class="MCPopupSpot" onclick="FMCPopup( event, this ); return false;" MadCap:src="../implementation_strategies/maintenance/defragment.htm">Defragment<img style="border: none;margin-left: 5px;" src="../SkinSupport/ExpandingClosed.gif" MadCap:altsrc="../SkinSupport/ExpandingOpen.gif" class="MCExpandingIcon" onload="if ( typeof( FMCPreloadImage ) == 'function' ) { FMCPreloadImage( '../SkinSupport/ExpandingOpen.gif' ); }" /></a></span> copies all objects to a new Object Container, it can be
used to change the blockSize of an existing database:</p>
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <p>Java:</p>
            <p><code>Defragment.defrag("filename.db4o")</code>
            </p>
        </p>
        <p MadCap:conditions="Global.Primary:java" />
        <p MadCap:conditions="Global.Primary:net" /><a name="Performance"></a>
        <h2>Performance
</h2>
        <p>Navigation access times
to objects and the performance of access by internal IDs remains
constant, no matter how large database files are.   Query
performance on unindexed objects drops linearly with an increasing
number of objects per class.   Query performance on a large
number of objects can be dramatically improved by <a href="../tuning/performance_hints/enable_field_indexes.htm">using indexes</a>:
</p>
        <p MadCap:conditions="Primary.Java,Primary.All languages">
            <p>Java:</p>
            <p><code>configuration.objectClass(Foo.class).objectField("bar").indexed(true);
</code>
            </p>
        </p>
        <p MadCap:conditions="Global.Primary:java" />
        <p>
            <p>.NET:</p>
            <p><code>configuration.ObjectClass(typeof(Foo)).ObjectField("bar").Indexed(true);
</code>
            </p>
            <p>
            </p>
            <p MadCap:conditions="Global.Primary:net" />
        </p>
        <p>db4o storage performance is very good. It is recommended to run your own benchmarks with large amounts of data to check the overall performance on your particular class hierarchy.</p>
        <script type="text/javascript" src="../SkinSupport/MadCapBodyEnd.js">
        </script>
    </body>
</html>