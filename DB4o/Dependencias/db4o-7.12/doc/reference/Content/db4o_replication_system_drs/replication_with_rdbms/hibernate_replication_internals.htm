<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd" MadCap:lastBlockDepth="2" MadCap:lastHeight="120" MadCap:lastWidth="624" MadCap:disableMasterStylesheet="true" MadCap:tocPath="db4o Replication System dRS|Replication With RDBMS" MadCap:InPreviewMode="false" MadCap:RuntimeFileType="Topic" MadCap:TargetType="WebHelp" MadCap:PathToHelpSystem="../../../" MadCap:HelpSystemFileName="index.xml" MadCap:SearchType="Stem">
    <head><title>Hibernate Replication Internals	</title>
        <script type="text/javascript">/* <![CDATA[ */
			window.onload = function(){
                             prettyPrint();
			};
                /* ]]> */</script>
        <link href="../../SkinSupport/MadCap.css" rel="stylesheet" />
        <link href="../../Resources/Stylesheets/OnlineStyle.css" rel="stylesheet" />
        <script src="../../SkinSupport/MadCapAll.js">
        </script>
        <script src="../../Resources/Code/prettify.js">
        </script>
        <script src="../../Resources/Code/lang-vb.js">
        </script>
    </head>
    <body>
        <p class="MCWebHelpFramesetLink" style="display: none;"><a href="../../../index_CSH.html#db4o_replication_system_drs/replication_with_rdbms/hibernate_replication_internals.htm" style="">Open topic with navigation</a>
        </p>
        <div class="MCBreadcrumbsBox"><span class="MCBreadcrumbsPrefix">You are here: </span><a class="MCBreadcrumbsLink" href="../../db4o_replication_system_drs.htm">db4o Replication System dRS</a><span class="MCBreadcrumbsDivider"> &gt; </span><a class="MCBreadcrumbsLink" href="../replication_with_rdbms.htm">Replication With RDBMS</a><span class="MCBreadcrumbsDivider"> &gt; </span><span class="MCBreadcrumbs">Hibernate Replication Internals</span>
        </div>
        <p>
            <script type="text/javascript">/*<![CDATA[*/document.write('<a href="' + location.href +'">');
				document.write("Direct Link");
			document.write('</a>');/*]]>*/</script>
        </p>
        <p>
        </p>
        <h1>Hibernate Replication Internals</h1>
        <p>So far we have seen that <span class="MCPopup"><a href="javascript:void(0);" class="MCPopupSpot" onclick="FMCPopup( event, this ); return false;" MadCap:src="../../db4o_replication_system_drs.htm">dRS<img style="border: none;margin-left: 5px;" src="../../SkinSupport/ExpandingClosed.gif" MadCap:altsrc="../../SkinSupport/ExpandingOpen.gif" class="MCExpandingIcon" onload="if ( typeof( FMCPreloadImage ) == 'function' ) { FMCPreloadImage( '../../SkinSupport/ExpandingOpen.gif' ); }" /></a></span> allows you to replicate objects between
db4o and relational database. You maybe curious about how dRS keeps
track of the identity of objects in relational database and how dRS
knows which objects are changed since the last round of replication. Read
on and you will see how dRS does that.</p>
        <p>dRS internal objects keep information used by replication. Each internal object
is associated with a Hibernate mapping file (.hbm.xml). Hibernate reads
these files and understands  how to store / retrieve these internal
objects to / from the RDBMS. Each type of internal object maps to one
table in RDBMS. If such table does not exist, Hibernate creates it
automatically. </p><a name="ProviderSignature, MySignature and PeerSignature"></a>
        <h2>ProviderSignature, MySignature and PeerSignature</h2>
        <p>ProviderSignature uniquely identifies a ReplicationProvider.
MySignature and PeerSignature are the subclasses of ProviderSignature.
A HibernateReplicationProvider has a MySignature to serve as its own
identity. PeerSignature identifies the peer ReplicationProvider during
a ReplicationSession.</p><a name="Record"></a>
        <h2>Record</h2>
        <p>Record contains the version of the <span class="MCTextPopup"><a href="javascript:void(0);" class="MCTextPopupSpot" onclick="FMCTextPopup( event, this ); return false;">RDBMS<img style="border: none;margin-left: 5px;" src="../../SkinSupport/ExpandingClosed.gif" MadCap:altsrc="../../SkinSupport/ExpandingOpen.gif" class="MCExpandingIcon" onload="if ( typeof( FMCPreloadImage ) == 'function' ) { FMCPreloadImage( '../../SkinSupport/ExpandingOpen.gif' ); }" /></a><span class="MCTextPopupBody" style="display: none; ">Relational Database Management System</span></span> during a ReplicationSession.
Near the end of a ReplicationSession, two ReplicationProviders
synchronize their versions.</p>
        <p>Record allows dRS to detect changed objects. dRS detects changed
objects by comparing the version of an object (v) with the maximum
version of all Records (m). An object is updated if v &gt; m.</p><a name="UUID"></a>
        <h2>UUID</h2>
        <p><span class="MCPopup"><a href="javascript:void(0);" class="MCPopupSpot" onclick="FMCPopup( event, this ); return false;" MadCap:src="../../implementation_strategies/ids_and_uuids/unique_universal_ids.htm">UUID<img style="border: none;margin-left: 5px;" src="../../SkinSupport/ExpandingClosed.gif" MadCap:altsrc="../../SkinSupport/ExpandingOpen.gif" class="MCExpandingIcon" onload="if ( typeof( FMCPreloadImage ) == 'function' ) { FMCPreloadImage( '../../SkinSupport/ExpandingOpen.gif' ); }" /></a></span> uniquely identifies a persisted object in dRS. 
Each persisted object is
identified by a "typed_id" in Hibernate. This "typed_id" is unique only with its
type of that object (i.e. A car has an "typed_id" of 1534, a Pilot can
also has an "typed_id" of 1534) and within the current RDBMS. 
How do we identify "a Pilot that is originated from Oracle instance pi2763" ? To do so, we need two parameters: 
   1. an id that is unique across types 
   2. association between this id and the ProviderSignature of the RDBMS (The RDBMS that owns this object) </p>
        <p><code>class UUID {</code><code>long longPart;</code><code>ProviderSignature provider;</code><code>}</code>
        </p>
        <p>Collectively, 1 and 2 forms the "UUID".</p><a name="ObjectReference"></a>
        <h2>ObjectReference</h2>
        <p>ObjectReference contains the UUID and the version of a persisted
object. It also contains the className and the typed_id of that
persisted object. 
UUID forms an 1 to 1 relationship with {className, typedId}.</p>
        <p><code>class ObjectReference {</code><code>String className;</code><code>long typedId;</code><code>Uuid uuid;</code><code>long version;</code><code>}</code>
        </p><a name="List of dRS tables"></a>
        <h2>List of dRS tables</h2><a name="drs_providers"></a>
        <h2>drs_providers</h2>
        <table border="1">
            <tr>
                <td><b>Column</b>
                </td>
                <td><b>Type</b>
                </td>
                <td><b>Function</b>
                </td>
            </tr>
            <tr>
                <td> 
id </td>
                <td> long </td>
                <td> synthetic, auto-increment primary key</td>
            </tr>
            <tr>
                <td> 
is_my_sig</td>
                <td> char(1) </td>
                <td> 't' if MySignature, 'f' if PeerSignature</td>
            </tr>
            <tr>
                <td> 
signature</td>
                <td> binary </td>
                <td> holds the unique identifier - byte array</td>
            </tr>
            <tr>
                <td> 
created </td>
                <td> long </td>
                <td> legacy field used by pre-dRS db4o replication code</td>
            </tr>
        </table><a name="drs_history"></a>
        <h2>drs_history</h2>
        <table style="border-width:1px;" border="1">
            <tr>
                <td><b> Column </b>
                </td>
                <td><b>Type</b>
                </td>
                <td><b>Function</b>
                </td>
            </tr>
            <tr>
                <td> 
provider_id </td>
                <td> long</td>
                <td> primary key, same as the PK of a PeerSignature</td>
            </tr>
            <tr>
                <td> 
time</td>
                <td> long</td>
                <td> the version of the RDBMS during a ReplicationSession</td>
            </tr>
        </table><a name="drs_objects"></a>
        <h2>drs_objects</h2>
        <table style="border-width:1px;" border="1">
            <tr>
                <td><b>Column </b>
                </td>
                <td><b>Type</b>
                </td>
                <td><b>Function</b>
                </td>
            </tr>
            <tr>
                <td>id</td>
                <td> long</td>
                <td> synthetic, auto-increment primary key</td>
            </tr>
            <tr>
                <td>created</td>
                <td> long</td>
                <td> the UUID long part of this ObjectReference</td>
            </tr>
            <tr>
                <td>provider_id</td>
                <td> long</td>
                <td> specifies the originating ReplicationProvider of this ObjectReference</td>
            </tr>
            <tr>
                <td>class_name</td>
                <td> varchar</td>
                <td> the type of the referenced object</td>
            </tr>
            <tr>
                <td>typed_id</td>
                <td> long</td>
                <td> the id used by Hibernate, which is only unique within its type</td>
            </tr>
            <tr>
                <td>modified  </td>
                <td> long</td>
                <td> the version of the referenced object</td>
            </tr>
        </table>
        <script type="text/javascript" src="../../SkinSupport/MadCapBodyEnd.js">
        </script>
    </body>
</html>